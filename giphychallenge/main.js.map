{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/gif/gif.component.ts","./src/app/components/gif/gif.component.html","./src/app/components/search-mode/search-mode.component.ts","./src/app/components/search-mode/search-mode.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/services/favorites.service.ts","./src/app/services/load-more.service.ts","./src/app/services/search.service.ts","./src/app/services/trending.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { LoadMore } from './services/load-more.service';\nimport { TrendingService } from './services/trending.service';\nimport { FavoriteService } from './services/favorites.service';\nimport { ResponseInterface, SearchService } from './services/search.service';\nimport { Component, OnInit } from '@angular/core';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport { Subject } from 'rxjs';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  searchInput: string; //dualBinded var holding the searfield input\n  gifs: ResponseInterface; //Var holding the http response\n  gifAmount: number = 25;\n  currentSearch: string = '';\n  search$ = new Subject<string>();\n  moreGifs: boolean = true;\n  loader: boolean = false;\n  smallLoader: boolean = false;\n  showStickers: boolean = false;\n  enableStickerSelection: boolean = true;\n  searchDelay = 150;\n  faFrown = faFrown;\n\n  constructor(\n    private searchService: SearchService,\n    public favoriteService: FavoriteService,\n    private trendingService: TrendingService,\n    private loadMore: LoadMore\n  ) {}\n\n  ngOnInit() {\n    console.log('init'); //log init (for debugging)\n    this.showTrending(); //shows Trends\n\n    this.search$\n      .pipe(\n        tap(() => {\n          this.smallLoader = true;\n        }),\n        debounceTime(this.searchDelay),\n        tap((result) => {\n          this.currentSearch = result;\n        }),\n        switchMap((q) => {\n          return this.searchService.searchWithTrendingFallback(\n            q,\n            this.gifAmount,\n            this.showStickers\n          );\n        }),\n        tap(() => {\n          this.enableStickerSelection = true;\n        })\n      )\n      .subscribe((response) => {\n        this.gifs = response;\n        this.smallLoader = false;\n        this.moreGifs = this.gifs.data.length == this.gifAmount;\n      });\n  }\n\n  //search function - validates the search and makes a http get request\n  search(q: string) {\n    this.enableStickerSelection = true;\n    if (this.currentSearch != q) {\n      this.currentSearch = this.searchInput;\n    }\n    this.searchInput = '';\n    this.loader = true;\n    console.log(q);\n    this.searchService\n      .searchWithTrendingFallback(q, this.gifAmount, this.showStickers)\n      .subscribe((result) => {\n        this.gifs = result;\n        this.moreGifs = this.gifs.data.length == this.gifAmount;\n        this.loader = false;\n      });\n  }\n\n  //trending function - gets trending gifs with the trending service\n  showTrending() {\n    this.currentSearch = '';\n    this.enableStickerSelection = true;\n    this.loader = true;\n    this.trendingService.getTrending(this.showStickers).subscribe((result) => {\n      this.gifs = result;\n      this.loader = false;\n    });\n  }\n\n  favButtonPressed(id: string) {\n    this.favoriteService.toggleFavorite(id);\n  }\n\n  //favorites function - gets as favorites saved gifs ftrom the favorites service\n  displayFavorites() {\n    this.enableStickerSelection = false;\n    this.moreGifs = false;\n    this.loader = true;\n    this.favoriteService.getFavorites().subscribe((result) => {\n      this.gifs = result;\n      this.loader = false;\n    });\n  }\n\n  //loads more gifs with the help of the load more service\n  getMore() {\n    this.loader = true;\n    this.loadMore\n      .load(\n        this.gifs?.data.length,\n        this.gifAmount,\n        this.currentSearch,\n        this.showStickers\n      )\n      .subscribe((result) => {\n        this.moreGifs = result.data.length == this.gifAmount; //check if the amount ofgifs got returned that was requested - if not it means that ther are no more gifs left\n        this.gifs.data = this.gifs.data.concat(result.data); //add the new results to the gif list\n        this.loader = false;\n      });\n  }\n\n  setSearchMode(stickerMode: boolean) {\n    this.showStickers = stickerMode;\n    if (this.currentSearch) {\n      this.search(this.currentSearch);\n    } else {\n      this.showTrending();\n    }\n  }\n\n  dynamicSearch(input: string) {\n    this.search$.next(input);\n  }\n}\n","<app-search-mode\n  [showStickers]=\"showStickers\"\n  (showStickersChange)=\"setSearchMode($event)\"\n  [(enableStickerSelection)]=\"enableStickerSelection\"\n></app-search-mode>\n\n<div class=\"component-container\">\n  <app-search\n    [smallLoader]=\"smallLoader\"\n    [(searchInput)]=\"searchInput\"\n    (triggerTrending)=\"showTrending()\"\n    (triggerFavorites)=\"displayFavorites()\"\n    (triggerDynamicSearch)=\"dynamicSearch($event)\"\n    (triggerSearch)=\"search($event)\"\n  ></app-search>\n  <!-- Loop through every gifObj. and display it-->\n  <div class=\"result-container\">\n    <div *ngFor=\"let gifObj of gifs?.data\">\n      <app-gif\n        [title]=\"gifObj.title\"\n        [url]=\"gifObj.url\"\n        [id]=\"gifObj.id\"\n        [liked]=\"favoriteService.hasFavorite(gifObj.id)\"\n        (favButtonPressed)=\"favButtonPressed($event)\"\n      ></app-gif>\n    </div>\n  </div>\n\n  <button\n    (click)=\"getMore()\"\n    *ngIf=\"moreGifs\"\n    type=\"button\"\n    class=\"more-button\"\n  >\n    More\n  </button>\n\n  <div class=\"nogifs-container\" *ngIf=\"!gifs?.data?.length\">\n    <h1>Sorry, No Gifs found!</h1>\n    <br />\n    <fa-icon [icon]=\"faFrown\"></fa-icon>\n  </div>\n\n  <div class=\"loading-container\" *ngIf=\"loader\">\n    <div class=\"lds-ripple\">\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n</div>\n","import { SearchComponent } from './components/search/search.component';\nimport { SearchModeComponent } from './components/search-mode/search-mode.component';\nimport { LoadMore } from './services/load-more.service';\nimport { TrendingService } from './services/trending.service';\nimport { FavoriteService } from './services/favorites.service';\nimport { SearchService } from './services/search.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { GifComponent } from './components/gif/gif.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {\n  FontAwesomeModule,\n  FaIconLibrary,\n} from '@fortawesome/angular-fontawesome';\nimport { faFrown, faHeart, fas } from '@fortawesome/free-solid-svg-icons';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GifComponent,\n    SearchModeComponent,\n    SearchComponent,\n  ],\n  imports: [BrowserModule, HttpClientModule, FontAwesomeModule, FormsModule],\n  providers: [SearchService, FavoriteService, TrendingService, LoadMore],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas);\n    library.addIcons(faHeart);\n  }\n}\n","//GifComponent - Holding and displaying the data of one gif\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnInit,\r\n  OnChanges,\r\n  EventEmitter,\r\n} from '@angular/core';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-gif',\r\n  templateUrl: 'gif.component.html',\r\n  styleUrls: ['gif.component.scss'],\r\n})\r\nexport class GifComponent implements OnInit, OnChanges {\r\n  //Data Vars with default values\r\n  faHeart = faHeart;\r\n  private innerLiked: boolean = false;\r\n\r\n  @Input()\r\n  set liked(val: boolean) {\r\n    this.innerLiked = val;\r\n    this.ngOnChanges();\r\n  }\r\n\r\n  get liked() {\r\n    return this.innerLiked;\r\n  }\r\n\r\n  @Output()\r\n  favButtonPressed = new EventEmitter<string>();\r\n\r\n  @Input()\r\n  title: string = 'Kein Titel';\r\n\r\n  @Input()\r\n  url: string = 'Error: No Url';\r\n\r\n  // @Input()\r\n  id: string = 'TqiwHbFBaZ4ti';\r\n\r\n  @Input('id')\r\n  set setableId(val: string) {\r\n    this.id = val;\r\n    this.mediaUrl = `https://media.giphy.com/media/${this.id}/giphy.gif`;\r\n  }\r\n\r\n  mediaUrl: string = 'https://media.giphy.com/media/TqiwHbFBaZ4ti/giphy.gif';\r\n\r\n  ngOnInit() {\r\n    //this.mediaUrl = `https://media.giphy.com/media/${this.id}/giphy.gif`; //when initialized the media url is generated from the id\r\n    this.liked = localStorage.getItem('favGifIds')?.includes(this.id); //set the liked by checking if id is saved in localstorage\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // if one input changes this gets called\r\n  }\r\n\r\n  HeartClicked() {\r\n    this.favButtonPressed.emit(this.id);\r\n  }\r\n}\r\n","<!-- template of an Gif container-->\r\n<div class=\"gif-container\">\r\n  <img [src]=\"mediaUrl\" />\r\n  <h3>{{ title }}</h3>\r\n  <a [href]=\"url\" target=\"_blank\">Link</a>\r\n  <button (click)=\"HeartClicked()\">\r\n    <fa-icon class=\"unlike\" [icon]=\"faHeart\" *ngIf=\"!liked\"></fa-icon>´\r\n    <fa-icon class=\"like\" [icon]=\"faHeart\" *ngIf=\"liked\"></fa-icon>\r\n  </button>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-mode',\r\n  templateUrl: 'search-mode.component.html',\r\n  styleUrls: ['search-mode.component.scss'],\r\n})\r\nexport class SearchModeComponent {\r\n  @Input() showStickers: boolean = false;\r\n  @Output() showStickersChange = new EventEmitter<boolean>();\r\n\r\n  @Input() enableStickerSelection: boolean = false;\r\n  @Output() enableStickerSelectionChange = new EventEmitter<boolean>();\r\n\r\n  //Change the current search mode\r\n  ChangeSearchMode(mode: string) {\r\n    console.log('Changed');\r\n    if (mode == 'Gif') {\r\n      //Set showSticker var depending on the received mode\r\n\r\n      this.showStickersChange.emit(false);\r\n    } else {\r\n      this.showStickersChange.emit(true);\r\n    }\r\n  }\r\n}\r\n","<div class=\"search-mode-container\" *ngIf=\"enableStickerSelection\">\r\n  <button\r\n    [ngClass]=\"{\r\n      enabeld: !showStickers,\r\n      disabeld: showStickers\r\n    }\"\r\n    (click)=\"ChangeSearchMode('Gif')\"\r\n    id=\"Gif\"\r\n    type=\"button\"\r\n  >\r\n    GIFs\r\n  </button>\r\n  <button\r\n    [ngClass]=\"{\r\n      enabeld: showStickers,\r\n      disabeld: !showStickers\r\n    }\"\r\n    (click)=\"ChangeSearchMode('Sticker')\"\r\n    id=\"Sticker\"\r\n    type=\"button\"\r\n  >\r\n    Stickers\r\n  </button>\r\n</div>\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: 'search.component.html',\r\n  styleUrls: ['search.component.scss'],\r\n})\r\nexport class SearchComponent {\r\n  @Input() smallLoader: boolean = false;\r\n\r\n  @Input() searchInput: string = '';\r\n  @Output() searchInputChange = new EventEmitter<string>();\r\n\r\n  @Output() triggerTrending = new EventEmitter();\r\n  @Output() triggerFavorites = new EventEmitter();\r\n\r\n  @Output() triggerDynamicSearch = new EventEmitter<string>();\r\n\r\n  @Output() triggerSearch = new EventEmitter<string>();\r\n\r\n  onInputChange(input: string) {\r\n    this.triggerDynamicSearch.emit(input);\r\n    //this.search$.next(input);\r\n  }\r\n\r\n  search(q: string) {\r\n    this.triggerSearch.emit(q);\r\n  }\r\n}\r\n","<div class=\"search-container\">\r\n  <h1>Giphy Search</h1>\r\n\r\n  <!--Search field-->\r\n  <form (ngSubmit)=\"search(searchInput)\">\r\n    <div class=\"pseudo-parent\">\r\n      <div *ngIf=\"smallLoader\" class=\"small-loading-container\">\r\n        <div class=\"lds-facebook\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <input\r\n      name=\"SearchField\"\r\n      [(ngModel)]=\"searchInput\"\r\n      (input)=\"onInputChange(searchInput)\"\r\n      type=\"search\"\r\n      placeholder=\"Search for Gifs\"\r\n    />\r\n    <button type=\"submit\">SEARCH</button>\r\n    <button type=\"reset\" (click)=\"triggerTrending.emit()\">Clear</button>\r\n  </form>\r\n\r\n  <div class=\"favorites-container\">\r\n    <button type=\"button\" (click)=\"triggerFavorites.emit()\">\r\n      Display Favorites\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { ResponseInterface } from '../services/search.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FavoriteService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  favGifIdsString: string;\r\n\r\n  defaultRes: ResponseInterface = {\r\n    data: [],\r\n  };\r\n\r\n  getFavorites(): Observable<ResponseInterface> {\r\n    //Gets all saved gifs and displays them\r\n    this.favGifIdsString = localStorage.getItem('favGifIds'); //Get the ids from localStorage\r\n    if (this.favGifIdsString) {\r\n      //Check if there are favorite Gifs\r\n      return this.httpClient.get<ResponseInterface>(\r\n        `https://api.giphy.com/v1/gifs?api_key=vf7nDm11F3X2Pe63jIGjWWPiFCFCZXM8&ids=${this.favGifIdsString}` //Get Gifs with the ids api : https://developers.giphy.com/docs/api/endpoint#get-gifs-by-id\r\n      );\r\n    } else {\r\n      alert('No favorite Gifs');\r\n      return of(this.defaultRes);\r\n    }\r\n  }\r\n\r\n  hasFavorite(id: string) {\r\n    return localStorage.getItem('favGifIds')?.includes(id);\r\n  }\r\n\r\n  toggleFavorite(id: string) {\r\n    if (this.hasFavorite(id)) {\r\n      this.removeFavorite(id);\r\n    } else {\r\n      this.addFavorite(id);\r\n    }\r\n  }\r\n\r\n  addFavorite(id: string) {\r\n    let favGifIds: string[] = this.getFavoritesArray(); //Create Array holding the ids as array\r\n    favGifIds.push(id); //if liked push the new id to the array\r\n    localStorage.setItem('favGifIds', favGifIds.toString()); //Create new String from id array and save it in the localStorage\r\n  }\r\n\r\n  removeFavorite(id: string) {\r\n    let favGifIds: string[] = this.getFavoritesArray(); //Create Array holding the ids as array\r\n    favGifIds = favGifIds.filter((e) => e !== id); //if unlicked remove the id from the array / from: https://stackoverflow.com/questions/9792927/javascript-array-search-and-remove-string\r\n    localStorage.setItem('favGifIds', favGifIds.toString()); //Create new String from id array and save it in the localStorage\r\n  }\r\n\r\n  getFavoritesArray() {\r\n    this.favGifIdsString = localStorage.getItem('favGifIds'); //Get the ids from localStorage\r\n    if (this.favGifIdsString) {\r\n      //Checks if there are currently ids in the storage\r\n      return this.favGifIdsString.split(','); //if there are split the string into array\r\n    } else {\r\n      return []; //if not create an empty array\r\n    }\r\n  }\r\n}\r\n","import { ResponseInterface } from './search.service';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LoadMore {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  //makes a http request to load more gifs from the api\r\n  load(\r\n    index: number, //index of the last loaded gif\r\n    amount: number, //amount of gifs to load\r\n    q: string, //search query\r\n    stickers: boolean\r\n  ): Observable<ResponseInterface> {\r\n    const dir: string = stickers ? 'stickers' : 'gifs';\r\n\r\n    if (q === '') {\r\n      //if the search query is empty load trending gifs\r\n      return this.httpClient.get<ResponseInterface>(\r\n        `https://api.giphy.com/v1/${dir}/trending?api_key=vf7nDm11F3X2Pe63jIGjWWPiFCFCZXM8&limit=${amount}&offset=${index}`\r\n      );\r\n    } else {\r\n      return this.httpClient.get<ResponseInterface>(\r\n        `https://api.giphy.com/v1/${dir}/search?api_key=vf7nDm11F3X2Pe63jIGjWWPiFCFCZXM8&q=${q}&limit=${amount}&offset=${index}`\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { TrendingService } from './trending.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface ResponseInterface {\r\n  //Interface holding the api structure\r\n  data: DataResponseInterface[];\r\n}\r\nexport interface DataResponseInterface {\r\n  //subInterface with the important api vars\r\n  title: string;\r\n  url: string;\r\n  id: string;\r\n}\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private trendingService: TrendingService\r\n  ) {}\r\n\r\n  defaultRes: ResponseInterface = {\r\n    data: [],\r\n  };\r\n\r\n  searchCache = new Map<string, ResponseInterface>();\r\n\r\n  //search function - validates the search and makes a http get request\r\n  searchWithTrendingFallback(\r\n    q: string,\r\n    n: number,\r\n    stickers: boolean\r\n  ): Observable<ResponseInterface> {\r\n    if (q != '' && q != undefined) {\r\n      return this.search(q, n, stickers);\r\n    } else {\r\n      return this.trendingService.getTrending(stickers);\r\n    }\r\n  }\r\n\r\n  search(\r\n    q: string,\r\n    n: number,\r\n    stickers: boolean\r\n  ): Observable<ResponseInterface> {\r\n    console.log('Search: ', q);\r\n    const dir: string = stickers ? 'stickers' : 'gifs';\r\n    if (this.searchIsValid(q)) {\r\n      if (this.searchCache.has(q + dir)) {\r\n        return of(this.searchCache.get(q + dir));\r\n      } else {\r\n        return this.httpClient\r\n          .get<ResponseInterface>(\r\n            `https://api.giphy.com/v1/${dir}/search?api_key=vf7nDm11F3X2Pe63jIGjWWPiFCFCZXM8&q=${q}&limit=${n}`\r\n          )\r\n          .pipe(\r\n            tap((response) => {\r\n              this.searchCache.set(q + dir, response);\r\n            })\r\n          );\r\n      }\r\n    } else {\r\n      console.log('Search not Valid'); //Log error if search is invalid\r\n      return of(this.defaultRes);\r\n    }\r\n  }\r\n\r\n  //Test if the Search var is valid\r\n  searchIsValid(search: string) {\r\n    if (search) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { ResponseInterface } from './search.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TrendingService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getTrending(stickers: boolean): Observable<ResponseInterface> {\r\n    //gets the trending Gifs with the trending api from giphy\r\n    const dir: string = stickers ? 'stickers' : 'gifs';\r\n\r\n    return this.httpClient.get<ResponseInterface>(\r\n      `https://api.giphy.com/v1/${dir}/trending?api_key=vf7nDm11F3X2Pe63jIGjWWPiFCFCZXM8`\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}