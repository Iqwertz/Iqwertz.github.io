{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/create-session/create-session.component.ts","./src/app/components/create-session/create-session.component.html","./src/app/components/join-session/join-session.component.ts","./src/app/components/join-session/join-session.component.html","./src/app/components/session-messages-text-field/session-messages-text-field.component.ts","./src/app/components/session-messages-text-field/session-messages-text-field.component.html","./src/app/components/session-messages/session-messages.component.ts","./src/app/components/session-messages/session-messages.component.html","./src/app/components/sessionmenu/sessionmenu.component.ts","./src/app/components/sessionmenu/sessionmenu.component.html","./src/app/pages/landing/landing.component.ts","./src/app/pages/landing/landing.component.html","./src/app/pages/session/session.component.ts","./src/app/pages/session/session.component.html","./src/app/services/connect.service.ts","./src/app/services/messages.service.ts","./src/app/store/app.action.ts","./src/app/store/app.state.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { LandingComponent } from './pages/landing/landing.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SessionComponent } from './pages/session/session.component';\n\nconst routes: Routes = [\n  {\n    path: 'session/:id',\n    component: SessionComponent,\n  },\n  {\n    path: '',\n    component: LandingComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>\n","import { AppState } from './store/app.state';\nimport { ConnectService } from './services/connect.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { LandingComponent } from './pages/landing/landing.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { SessionComponent } from './pages/session/session.component';\nimport { SessionMessagesComponent } from './components/session-messages/session-messages.component';\nimport { SessionMessagesTextFieldComponent } from './components/session-messages-text-field/session-messages-text-field.component';\nimport { JoinSessionComponent } from './components/join-session/join-session.component';\nimport { CreateSessionComponent } from './components/create-session/create-session.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SessionmenuComponent } from './components/sessionmenu/sessionmenu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    SessionComponent,\n    SessionMessagesComponent,\n    SessionMessagesTextFieldComponent,\n    JoinSessionComponent,\n    CreateSessionComponent,\n    SessionmenuComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxsModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    FormsModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    NgxsModule.forRoot([AppState]),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n  ],\n  providers: [ConnectService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ConnectService } from '../../services/connect.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-session',\n  templateUrl: './create-session.component.html',\n  styleUrls: ['./create-session.component.scss'],\n})\nexport class CreateSessionComponent implements OnInit {\n  constructor(private connectService: ConnectService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  createSession() {\n    this.connectService.newSession().subscribe((res) => {\n      this.router.navigate(['session', res.sessionId]);\n    });\n  }\n}\n","<div class=\"create-session-container\">\n  <form (ngSubmit)=\"createSession()\">\n    <button type=\"submit\">Create new Session</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-join-session',\n  templateUrl: './join-session.component.html',\n  styleUrls: ['./join-session.component.scss'],\n})\nexport class JoinSessionComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  joinSession(id: string) {\n    if (id.length == 4) {\n      id = id.toUpperCase();\n      this.router.navigate(['session', id]);\n    }\n  }\n\n  inputKey(event) {\n    if (event.key === 'Backspace') {\n      let element = event.srcElement.previousElementSibling; // get the sibling element\n\n      if (element == null) {\n        // check if its null\n        return;\n      } else {\n        element.focus(); // focus if not null\n      }\n    } else if (event.currentTarget.value.length >= 1) {\n      let element = event.srcElement.nextElementSibling; // get the sibling element\n\n      if (element == null) {\n        // check if its null\n        return;\n      } else {\n        element.focus(); // focus if not null\n      }\n    }\n  }\n}\n","<div class=\"join-session-container\">\n  <form\n    autocomplete=\"off\"\n    (ngSubmit)=\"\n      joinSession(id1.value + '' + id2.value + '' + id3.value + '' + id4.value)\n    \"\n  >\n    <div class=\"input-field-container\">\n      <input\n        #id1\n        name=\"sessionId1\"\n        type=\"text\"\n        maxlength=\"1\"\n        (keyup)=\"inputKey($event)\"\n      />\n      <input\n        #id2\n        name=\"sessionId2\"\n        type=\"text\"\n        maxlength=\"1\"\n        (keyup)=\"inputKey($event)\"\n      />\n      <input\n        #id3\n        name=\"sessionId3\"\n        type=\"text\"\n        maxlength=\"1\"\n        (keyup)=\"inputKey($event)\"\n      />\n      <input\n        #id4\n        name=\"sessionId4\"\n        type=\"text\"\n        maxlength=\"1\"\n        (keyup)=\"inputKey($event)\"\n      />\n      <!-- <input\n            #id\n            name=\"sessionId\"\n            type=\"text\"\n            maxlength=\"4\"\n            onKeyPress=\"if(this.value.length==4) return false;\"\n          /> -->\n    </div>\n    <button type=\"submit\">Join Session</button>\n  </form>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-session-messages-text-field',\n  templateUrl: './session-messages-text-field.component.html',\n  styleUrls: ['./session-messages-text-field.component.scss'],\n})\nexport class SessionMessagesTextFieldComponent implements OnInit {\n  textMessage: string;\n  @Output() newMessageChange = new EventEmitter<string>();\n  faArrowRight = faArrowRight;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  sendMessage(msg: string) {\n    this.textMessage = '';\n    this.newMessageChange.emit(msg);\n  }\n}\n","<div class=\"messages-text-field-container\">\n  <form (ngSubmit)=\"sendMessage(textMessage)\">\n    <input [(ngModel)]=\"textMessage\" name=\"msgField\" autocomplete=\"off\" />\n    <button type=\"submit\"><fa-icon [icon]=\"faArrowRight\"></fa-icon></button>\n  </form>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  MessagesService,\n  MessageObject,\n} from '../../services/messages.service';\n\n@Component({\n  selector: 'app-session-messages',\n  templateUrl: './session-messages.component.html',\n  styleUrls: ['./session-messages.component.scss'],\n})\nexport class SessionMessagesComponent implements OnInit {\n  constructor(private messagesService: MessagesService) {}\n  messageList: MessageObject[] = [];\n  @ViewChild('scroll') private myScrollContainer: ElementRef;\n\n  @Input()\n  reconnectError: boolean = false;\n\n  ngOnInit(): void {\n    this.messagesService.onUpdate$.subscribe((messagesList) => {\n      this.messageList = messagesList;\n      setTimeout(() => {\n        this.scrollToBottom();\n      }, 10);\n    });\n  }\n\n  scrollToBottom(): void {\n    try {\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n    } catch (err) {}\n  }\n}\n","<div class=\"messages-parent\">\n  <div #scroll class=\"messages-container\">\n    <ul class=\"messages\">\n      <li *ngFor=\"let item of messageList\">\n        <div\n          class=\"message-container\"\n          [ngClass]=\"{\n            left: item.type == 'receiver',\n            right: item.type == 'sender',\n            center: item.type == 'status'\n          }\"\n        >\n          <div class=\"user-icon\" *ngIf=\"item.type == 'receiver'\">\n            <img src=\"/assets/usericons/{{ item.userName }}.svg\" />\n          </div>\n          <div class=\"message\">\n            {{ item.message }}\n          </div>\n          <div class=\"user-icon\" *ngIf=\"item.type == 'sender'\">\n            <img src=\"/assets/usericons/{{ item.userName }}.svg\" />\n          </div>\n        </div>\n      </li>\n      <li *ngIf=\"reconnectError\">\n        <div class=\"back-to-start\">\n          <a href=\"/\"><button>Back to Start</button></a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { UserData } from './../../pages/session/session.component';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { AppState } from '../../store/app.state';\r\nimport { Select } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'app-sessionmenu',\r\n  templateUrl: './sessionmenu.component.html',\r\n  styleUrls: ['./sessionmenu.component.scss'],\r\n})\r\nexport class SessionmenuComponent implements OnInit {\r\n  sessionId: String = '0000';\r\n  userName: String = 'Not Found';\r\n  userInSession: Map<string, UserData>;\r\n  userId: string = '';\r\n  @Select(AppState.sessionId) sessionId$;\r\n  @Select(AppState.userName) userName$;\r\n  @Select(AppState.userInSession) userInSession$;\r\n  @Select(AppState.userId) userId$;\r\n\r\n  navOpen: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.sessionId$.subscribe((sessionId: string) => {\r\n      this.sessionId = sessionId;\r\n    });\r\n\r\n    this.userName$.subscribe((userName: string) => {\r\n      this.userName = userName;\r\n    });\r\n\r\n    this.userId$.subscribe((userId: string) => {\r\n      this.userId = userId;\r\n    });\r\n\r\n    this.userInSession$.subscribe((userInSession: Map<string, UserData>) => {\r\n      this.userInSession = userInSession;\r\n      this.userInSession.delete(this.userId);\r\n      console.log(this.userInSession);\r\n    });\r\n  }\r\n}\r\n","<div class=\"sidenav\" [ngClass]=\"{ open: navOpen, close: !navOpen }\">\r\n  <a href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"navOpen = false\"\r\n    >&times;</a\r\n  >\r\n  <div class=\"session-id\">\r\n    <h2>Session Id</h2>\r\n    <div class=\"id-box-container\">\r\n      <div class=\"session-id-box\">{{ sessionId[0] }}</div>\r\n      <div class=\"session-id-box\">{{ sessionId[1] }}</div>\r\n      <div class=\"session-id-box\">{{ sessionId[2] }}</div>\r\n      <div class=\"session-id-box\">{{ sessionId[3] }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"user\">\r\n    <h2>Active User</h2>\r\n    <ul>\r\n      <li class=\"list-seperator\"><h3>You:</h3></li>\r\n      <li>\r\n        <div class=\"user-icon\">\r\n          <img src=\"/assets/usericons/{{ userName }}.svg\" />\r\n        </div>\r\n        <div class=\"user-name\">\r\n          {{ userName }}\r\n        </div>\r\n      </li>\r\n      <li class=\"list-seperator\">\r\n        <h3>Other:</h3>\r\n      </li>\r\n      <li *ngFor=\"let user of userInSession | keyvalue\">\r\n        <div class=\"user-icon\">\r\n          <img src=\"/assets/usericons/{{ user.value.userName }}.svg\" />\r\n        </div>\r\n        <div class=\"user-name\">\r\n          {{ user.value.userName }}\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<span class=\"open-menu\" (click)=\"navOpen = true\">&#9776;</span>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss'],\n})\nexport class LandingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"landing-container\">\n  <div class=\"website-title\">TransferTube.io</div>\n\n  <app-create-session></app-create-session>\n\n  <div class=\"or-container\">\n    ------- OR -------\n  </div>\n\n  <app-join-session></app-join-session>\n</div>\n","import { ConnectService } from './../../services/connect.service';\nimport { Component, OnInit, ViewChild, ɵɵviewQuery } from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  Event,\n  NavigationStart,\n  NavigationError,\n  NavigationEnd,\n} from '@angular/router';\nimport { SessionMessagesComponent } from '../../components/session-messages/session-messages.component';\nimport {\n  MessagesService,\n  MessageObject,\n} from '../../services/messages.service';\nimport { environment } from '../../../environments/environment';\nimport { Store } from '@ngxs/store';\nimport {\n  SetUserId,\n  SetSessionId,\n  SetUserName,\n  SetUserInSession,\n} from '../../store/app.action';\n\nexport interface SessionInitData {\n  userId: string;\n  userName: string;\n  sessionId: string;\n}\n\nexport interface UserData {\n  userName: string;\n  userId: string;\n}\n\n@Component({\n  templateUrl: './session.component.html',\n  styleUrls: ['./session.component.scss'],\n})\nexport class SessionComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private connectService: ConnectService,\n    private messagesService: MessagesService,\n    private store: Store\n  ) {}\n  socket: SocketIOClient.Socket;\n  @ViewChild(SessionMessagesComponent)\n  messagesComponent: SessionMessagesComponent;\n  currentSessionId: string;\n  sessionError: boolean = false;\n  reconnectionError: boolean = false;\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe((params) => {\n      this.currentSessionId = params.get('id');\n      this.joinSession(this.currentSessionId);\n    });\n\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationStart) {\n        //do something on start activity\n      }\n\n      if (event instanceof NavigationError) {\n        console.error(event.error);\n      }\n\n      if (event instanceof NavigationEnd) {\n        this.messagesService.removeAllMessages();\n        this.socket.close();\n      }\n    });\n  }\n\n  joinSession(id: string) {\n    this.connectService.checkSession(id).subscribe(\n      () => {\n        this.socketIni(this.connectService.joinSession(id));\n        this.sessionError = false;\n      },\n      (error) => {\n        console.log('Sorry diese Session gibt es nicht :(');\n        this.sessionError = true;\n      }\n    );\n  }\n\n  socketIni(s: SocketIOClient.Socket) {\n    this.socket = s;\n\n    this.socket.on(environment.messageIdentifier, (msg: MessageObject) => {\n      this.messagesService.addMessage(msg);\n    });\n\n    this.socket.on('SessionIni', (ini: SessionInitData) => {\n      this.store.dispatch(new SetUserId(ini.userId));\n      this.store.dispatch(new SetSessionId(ini.sessionId));\n      this.store.dispatch(new SetUserName(ini.userName));\n    });\n\n    this.socket.on('newUser', (userData) => {\n      const mappedData: Map<string, UserData> = new Map<string, UserData>(\n        Object.entries(userData)\n      );\n      this.store.dispatch(new SetUserInSession(mappedData));\n    });\n\n    this.socket.on('disconnect', () => {\n      this.sendStatus('Disconnected! Trying to reconnect...');\n      console.log('disconnected');\n    });\n\n    this.socket.on('reconnect_failed', () => {\n      this.reconnectionError = true;\n      this.sendStatus(`Couldn't reconnect :(`);\n      console.log('reconnect failed');\n    });\n  }\n\n  sendStatus(status: string) {\n    const msg: MessageObject = {\n      message: status,\n      messageId: -1,\n      userId: 'SERVER',\n      userName: 'Server',\n    };\n    this.messagesService.addMessage(msg);\n  }\n\n  sendMessage(msg: string) {\n    this.socket.emit(environment.messageIdentifier, msg);\n  }\n}\n","<div class=\"active-session-container\" *ngIf=\"!sessionError\">\n  <app-sessionmenu></app-sessionmenu>\n  <app-session-messages [reconnectError]=\"reconnectionError\">\n  </app-session-messages>\n  <app-session-messages-text-field\n    (newMessageChange)=\"sendMessage($event)\"\n  ></app-session-messages-text-field>\n</div>\n\n<div class=\"session-error-container\" *ngIf=\"sessionError\">\n  <h1>\n    Sorry!!! <br />\n    The Session with the id '{{ currentSessionId }}' doesn't exist!\n  </h1>\n\n  <a href=\"/\"><button>Back to Start</button></a>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as io from 'socket.io-client';\nimport { Socket } from 'socket.io-client';\n\nexport interface NewSessionResponse {\n  sessionId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectService implements OnInit {\n  constructor(private http: HttpClient) {}\n  socketUrl: string = environment.socketEndpoint;\n  newSessionPath: string = '/new';\n  socket: SocketIOClient.Socket = null;\n\n  ngOnInit(): void {}\n\n  newSession(): Observable<NewSessionResponse> {\n    return this.http.post<NewSessionResponse>(\n      this.socketUrl + this.newSessionPath,\n      {}\n    );\n  }\n\n  checkSession(id: string): Observable<void> {\n    return this.http.get<void>(this.socketUrl + '/session/' + id);\n  }\n\n  joinSession(id: string): SocketIOClient.Socket {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n    const path: string = '/' + id;\n    this.socket = io(this.socketUrl, {\n      path,\n      reconnection: environment.reconnectSettings.reconnection,\n      reconnectionDelay: environment.reconnectSettings.reconnectionDelay,\n      reconnectionDelayMax: environment.reconnectSettings.reconnectionDelayMax,\n      reconnectionAttempts: environment.reconnectSettings.reconnectionAttempts,\n    });\n    /*this.socket.on(enviroment.messageIdentifier, function (msg) {\n      console.log(msg);\n    });*/\n    return this.socket;\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AppState } from '../store/app.state';\nimport { Select } from '@ngxs/store';\n\nexport interface MessageObject {\n  message: string;\n  messageId: number;\n  userId: string;\n  userName: string;\n  date?: Date;\n  type?: messageType;\n}\n\nexport type messageType = 'sender' | 'receiver' | 'status';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagesService {\n  constructor() {\n    this.userId$.subscribe((uId: string) => {\n      console.log('UID changed');\n      this.userId = uId;\n    });\n  }\n\n  @Select(AppState.userId)\n  userId$;\n  userId: string = null;\n\n  private onUpdate$$ = new BehaviorSubject<MessageObject[]>([]);\n  private messages: MessageObject[] = [];\n\n  get onUpdate$(): Observable<MessageObject[]> {\n    return this.onUpdate$$.asObservable();\n  }\n\n  addMessage(msg: MessageObject) {\n    if (msg.userId === 'SERVER') {\n      msg.type = 'status';\n    } else if (msg.userId == this.userId) {\n      msg.type = 'sender';\n    } else {\n      msg.type = 'receiver';\n    }\n    this.messages.push(msg);\n    this.onUpdate$$.next(this.messages);\n  }\n\n  removeAllMessages() {\n    this.messages = [];\n    this.onUpdate$$.next(this.messages);\n  }\n\n  ngOnDestroy() {\n    this.onUpdate$$.complete();\n  }\n}\n","import { UserData } from '../pages/session/session.component';\r\n\r\nexport class SetUserId {\r\n  static type = 'SetUserId';\r\n  constructor(public userId: string) {}\r\n}\r\n\r\nexport class SetSessionId {\r\n  static type = 'SetSessionId';\r\n  constructor(public sessionId: string) {}\r\n}\r\n\r\nexport class SetUserName {\r\n  static type = 'SetUserName';\r\n  constructor(public userName: string) {}\r\n}\r\n\r\nexport class SetUserInSession {\r\n  static type = 'SetUserInSession';\r\n  constructor(public userInSession: Map<string, UserData>) {}\r\n}\r\n","//////Use\r\n/*\r\n  @Select(AppState.userId)\r\n  userId$;\r\n\r\n  ngOninit:\r\n    this.userId$.subscribe((userId: string) => {\r\n      this.userId = userId;\r\n    });\r\n\r\n  Set:\r\n  constructor: private store: Store\r\n\r\n  this.store.dispatch(new SetUserId(x));\r\n*/\r\n\r\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\r\nimport {\r\n  SetUserId,\r\n  SetSessionId,\r\n  SetUserName,\r\n  SetUserInSession,\r\n} from './app.action';\r\nimport { UserData } from '../pages/session/session.component';\r\n\r\nexport type SearchType = 'gifs' | 'stickers';\r\n\r\nexport interface AppStateModel {\r\n  userId: string;\r\n  sessionId: string;\r\n  userName: string;\r\n  userInSession: Map<string, UserData>;\r\n}\r\n\r\n@State<AppStateModel>({\r\n  name: 'appState',\r\n  defaults: {\r\n    userId: null,\r\n    sessionId: '0000',\r\n    userName: null,\r\n    userInSession: new Map<string, UserData>(),\r\n  },\r\n})\r\nexport class AppState {\r\n  @Selector()\r\n  static userId(state: AppStateModel) {\r\n    return state.userId;\r\n  }\r\n\r\n  @Action(SetUserId)\r\n  setUserId(context: StateContext<AppStateModel>, action: SetUserId) {\r\n    context.patchState({\r\n      userId: action.userId,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static sessionId(state: AppStateModel) {\r\n    return state.sessionId;\r\n  }\r\n\r\n  @Action(SetSessionId)\r\n  setSessionId(context: StateContext<AppStateModel>, action: SetSessionId) {\r\n    context.patchState({\r\n      sessionId: action.sessionId,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static userName(state: AppStateModel) {\r\n    return state.userName;\r\n  }\r\n\r\n  @Action(SetUserName)\r\n  setUserName(context: StateContext<AppStateModel>, action: SetUserName) {\r\n    context.patchState({\r\n      userName: action.userName,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static userInSession(state: AppStateModel) {\r\n    return state.userInSession;\r\n  }\r\n\r\n  @Action(SetUserInSession)\r\n  setUserInSession(\r\n    context: StateContext<AppStateModel>,\r\n    action: SetUserInSession\r\n  ) {\r\n    context.patchState({\r\n      userInSession: action.userInSession,\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  socketEndpoint: 'http://172.16.40.80:4269', //'http://172.16.40.80:3000', //http://localhost:3000\n  messageIdentifier: 'chat message',\n  reconnectSettings: {\n    reconnection: true,\n    reconnectionDelay: 500,\n    reconnectionDelayMax: 5000,\n    reconnectionAttempts: 5,\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}