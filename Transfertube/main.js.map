{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/create-session/create-session.component.ts","./src/app/components/create-session/create-session.component.html","./src/app/components/join-session/join-session.component.ts","./src/app/components/join-session/join-session.component.html","./src/app/components/search-messages/search-messages.component.ts","./src/app/components/search-messages/search-messages.component.html","./src/app/components/session-messages-text-field/session-messages-text-field.component.ts","./src/app/components/session-messages-text-field/session-messages-text-field.component.html","./src/app/components/session-messages/session-messages.component.ts","./src/app/components/session-messages/session-messages.component.html","./src/app/components/sessionmenu/sessionmenu.component.ts","./src/app/components/sessionmenu/sessionmenu.component.html","./src/app/components/useralert/useralert.component.ts","./src/app/components/useralert/useralert.component.html","./src/app/pages/landing/landing.component.ts","./src/app/pages/landing/landing.component.html","./src/app/pages/session/session.component.ts","./src/app/pages/session/session.component.html","./src/app/pipes/safe.pipe.ts","./src/app/pipes/search.pipe.ts","./src/app/services/connect.service.ts","./src/app/services/file-handler.service.ts","./src/app/services/messages.service.ts","./src/app/services/user-alert.service.ts","./src/app/store/app.action.ts","./src/app/store/app.state.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { LandingComponent } from './pages/landing/landing.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SessionComponent } from './pages/session/session.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'session/:id',\r\n    component: SessionComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    component: LandingComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { AppState } from './store/app.state';\r\nimport { ConnectService } from './services/connect.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\r\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\r\nimport { LandingComponent } from './pages/landing/landing.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { SessionComponent } from './pages/session/session.component';\r\nimport { SessionMessagesComponent } from './components/session-messages/session-messages.component';\r\nimport { SessionMessagesTextFieldComponent } from './components/session-messages-text-field/session-messages-text-field.component';\r\nimport { JoinSessionComponent } from './components/join-session/join-session.component';\r\nimport { CreateSessionComponent } from './components/create-session/create-session.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { SessionmenuComponent } from './components/sessionmenu/sessionmenu.component';\r\nimport { SafePipe } from './pipes/safe.pipe';\r\nimport { UseralertComponent } from './components/useralert/useralert.component';\r\nimport { SearchMessagesComponent } from './components/search-messages/search-messages.component';\r\nimport { SearchPipe } from './pipes/search.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingComponent,\r\n    SessionComponent,\r\n    SessionMessagesComponent,\r\n    SessionMessagesTextFieldComponent,\r\n    JoinSessionComponent,\r\n    CreateSessionComponent,\r\n    SessionmenuComponent,\r\n    SafePipe,\r\n    UseralertComponent,\r\n    SearchMessagesComponent,\r\n    SearchPipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgxsModule.forRoot(),\r\n    NgxsLoggerPluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot(),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    FontAwesomeModule,\r\n    NgxsModule.forRoot([AppState]),\r\n    //   NgxsLoggerPluginModule.forRoot(),\r\n    // NgxsReduxDevtoolsPluginModule.forRoot(),\r\n  ],\r\n  providers: [ConnectService],\r\n  bootstrap: [AppComponent],\r\n  exports: [SearchPipe],\r\n})\r\nexport class AppModule {}\r\n","/////////////////////////////////////////////\r\n/*\r\ncreates session Component\r\nDisplays create session button\r\n*/\r\n/////////////////////////////////////////////\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ConnectService } from '../../services/connect.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserAlertService } from '../../services/user-alert.service';\r\n\r\n@Component({\r\n  selector: 'app-create-session',\r\n  templateUrl: './create-session.component.html',\r\n  styleUrls: ['./create-session.component.scss'],\r\n})\r\nexport class CreateSessionComponent implements OnInit {\r\n  constructor(\r\n    private connectService: ConnectService,\r\n    private router: Router,\r\n    private uAlert: UserAlertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  createSession() {\r\n    //trys toi create a new session with the connect service and connects it on success\r\n    this.connectService.newSession().subscribe(\r\n      (res) => {\r\n        this.router.navigate(['session', res.sessionId]);\r\n      },\r\n      (err) => {\r\n        this.uAlert.setUserAlert(`Couldn't reach server`, 'error');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"create-session-container\">\r\n  <form (ngSubmit)=\"createSession()\">\r\n    <button type=\"submit\">Create new Session</button>\r\n  </form>\r\n</div>\r\n","/////////////////////////////////////////////\r\n/*\r\njoin session Component\r\nDisplays the join session field on the landing page\r\n*/\r\n/////////////////////////////////////////////\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-join-session',\r\n  templateUrl: './join-session.component.html',\r\n  styleUrls: ['./join-session.component.scss'],\r\n})\r\nexport class JoinSessionComponent implements OnInit {\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  joinSession(id: string) {\r\n    //join session by routing to it\r\n    if (id.length == 4) {\r\n      id = id.toUpperCase();\r\n      this.router.navigate(['session', id]);\r\n    }\r\n  }\r\n\r\n  inputKey(event) {\r\n    //handles input events on the 4 inout fields //\r\n    if (event.key === 'Backspace') {\r\n      let element = event.srcElement.previousElementSibling; //get the sibling element\r\n\r\n      if (element == null) {\r\n        // check if its null\r\n        return;\r\n      } else {\r\n        element.focus(); // focus if not null\r\n      }\r\n    } else if (event.currentTarget.value.length >= 1) {\r\n      let element = event.srcElement.nextElementSibling; // get the sibling element\r\n\r\n      if (element == null) {\r\n        // check if its null\r\n        return;\r\n      } else {\r\n        element.focus(); // focus if not null\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"join-session-container\">\r\n  <form\r\n    autocomplete=\"off\"\r\n    (ngSubmit)=\"\r\n      joinSession(id1.value + '' + id2.value + '' + id3.value + '' + id4.value)\r\n    \"\r\n  >\r\n    <div class=\"input-field-container\">\r\n      <input\r\n        #id1\r\n        name=\"sessionId1\"\r\n        type=\"text\"\r\n        maxlength=\"1\"\r\n        (keyup)=\"inputKey($event)\"\r\n      />\r\n      <input\r\n        #id2\r\n        name=\"sessionId2\"\r\n        type=\"text\"\r\n        maxlength=\"1\"\r\n        (keyup)=\"inputKey($event)\"\r\n      />\r\n      <input\r\n        #id3\r\n        name=\"sessionId3\"\r\n        type=\"text\"\r\n        maxlength=\"1\"\r\n        (keyup)=\"inputKey($event)\"\r\n      />\r\n      <input\r\n        #id4\r\n        name=\"sessionId4\"\r\n        type=\"text\"\r\n        maxlength=\"1\"\r\n        (keyup)=\"inputKey($event)\"\r\n      />\r\n      <!-- <input\r\n            #id\r\n            name=\"sessionId\"\r\n            type=\"text\"\r\n            maxlength=\"4\"\r\n            onKeyPress=\"if(this.value.length==4) return false;\"\r\n          /> -->\r\n    </div>\r\n    <button type=\"submit\">Join Session</button>\r\n  </form>\r\n</div>\r\n","/////////////////////////////////////////////\r\n/*\r\nsearch Message Text Component\r\nDisplays the search field\r\n*/\r\n/////////////////////////////////////////////\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  UserAlertService,\r\n  UserAlertTypes,\r\n} from '../../services/user-alert.service';\r\nimport {\r\n  MessagesService,\r\n  MessageObject,\r\n} from '../../services/messages.service';\r\nimport {\r\n  faSearch,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { Store } from '@ngxs/store';\r\nimport { SetSearchTerm } from '../../store/app.action';\r\n\r\n@Component({\r\n  selector: 'app-search-messages',\r\n  templateUrl: './search-messages.component.html',\r\n  styleUrls: ['./search-messages.component.scss'],\r\n})\r\nexport class SearchMessagesComponent implements OnInit {\r\n  constructor(\r\n    private messagesService: MessagesService,\r\n    private userAlertService: UserAlertService,\r\n    private store: Store\r\n  ) {}\r\n\r\n  searchField: boolean = false; //search field active status\r\n  searchTerm: string = ''; //the current search term\r\n  private searchIndex: number = 0; //the Index of the current searched message / used to go up and down in searched messages\r\n\r\n  faSearch = faSearch;\r\n  faAngleLeft = faAngleLeft;\r\n  faAngleRight = faAngleRight;\r\n  ngOnInit(): void {}\r\n\r\n  search(reset: boolean) {\r\n    //triggers a new search// if true the search Index gets reset\r\n    this.store.dispatch(new SetSearchTerm(this.searchTerm)); //save searchterm in store\r\n    if (reset) {\r\n      //reset index if true\r\n      this.searchIndex = 0;\r\n    }\r\n    const id: number = this.searchMessages(this.searchTerm); //searches messages and get id of matched message\r\n    if (id >= 0) {\r\n      //when id found scroll to it\r\n      this.messagesService.scrollToId(id);\r\n    } else if (id == -2) {\r\n      // if no message is found, because no message is above or below -> alert user\r\n      this.userAlertService.setUserAlert('no messages found', 'error');\r\n    }\r\n  }\r\n\r\n  nextSearch() {\r\n    //increases search index and trigger new search\r\n    this.searchIndex++;\r\n    this.search(false);\r\n  }\r\n\r\n  lastSearch() {\r\n    //decrease search index and trigger new search\r\n    this.searchIndex--;\r\n    this.search(false);\r\n  }\r\n\r\n  close() {\r\n    //closes search and clear search Term\r\n    this.searchField = false;\r\n    this.searchTerm = '';\r\n    this.store.dispatch(new SetSearchTerm(this.searchTerm));\r\n  }\r\n\r\n  private searchMessages(q: string): number {\r\n    //search messages for string / it returns the nth element of the searchIndex //returns -2 when no element found because search index is to high // returns -3 when no element is was found (it doesnt return -1 one because private server message have an id of -1)\r\n    const messages: MessageObject[] = this.messagesService.messages;\r\n    let resultCount: number = 0;\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n      const message = messages[i];\r\n      if (message.contentType != 'Picture' && message.type != 'status') {\r\n        if (message.message.includes(q)) {\r\n          if (this.searchIndex == resultCount) {\r\n            return message.messageId;\r\n          } else {\r\n            resultCount++;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (resultCount > 0) {\r\n      //check if something was found\r\n      return -2;\r\n    } else {\r\n      return -3;\r\n    }\r\n  }\r\n}\r\n","<div class=\"open-search\" (click)=\"searchField = !searchField\">\r\n  <fa-icon [icon]=\"faSearch\"></fa-icon>\r\n</div>\r\n\r\n<div class=\"search-field-container\" *ngIf=\"searchField\">\r\n  <input\r\n    [(ngModel)]=\"searchTerm\"\r\n    (ngModelChange)=\"search(true)\"\r\n    type=\"text\"\r\n    placeholder=\"Search\r\n  Session\"\r\n  />\r\n  <div class=\"close\" (click)=\"close()\">&times;</div>\r\n  <div class=\"arrows\">\r\n    <div (click)=\"nextSearch()\" class=\"left\">\r\n      <fa-icon [icon]=\"faAngleLeft\"></fa-icon>\r\n    </div>\r\n    <div (click)=\"lastSearch()\" class=\"right\">\r\n      <fa-icon [icon]=\"faAngleRight\"></fa-icon>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/////////////////////////////////////////////\r\n/*\r\nSession Message Text Component\r\nDisplays the input bar at the bottom of the site\r\n*/\r\n/////////////////////////////////////////////\r\nimport {\r\n  fileResult,\r\n  FileHandlerService,\r\n  FileType,\r\n} from './../../services/file-handler.service';\r\nimport { SendMessageObject } from './../../pages/session/session.component';\r\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  faArrowRight,\r\n  faCamera,\r\n  faFile,\r\n  faFileAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserAlertService } from 'src/app/services/user-alert.service';\r\n\r\n@Component({\r\n  selector: 'app-session-messages-text-field',\r\n  templateUrl: './session-messages-text-field.component.html',\r\n  styleUrls: ['./session-messages-text-field.component.scss'],\r\n})\r\nexport class SessionMessagesTextFieldComponent implements OnInit {\r\n  textMessage: string;\r\n  @Output() newMessageChange = new EventEmitter<SendMessageObject>();\r\n  faArrowRight = faArrowRight;\r\n  faCamera = faCamera;\r\n  faFile = faFile;\r\n  faFileAlt = faFileAlt;\r\n\r\n  fileData: fileResult = {\r\n    //file data default\r\n    dataBase64: '',\r\n    error: '',\r\n    isSaved: false,\r\n    name: '',\r\n    type: 'Document',\r\n  };\r\n\r\n  constructor(\r\n    private fileHandlerService: FileHandlerService,\r\n    private userAlert: UserAlertService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage(msg: string) {\r\n    if (this.fileData.dataBase64.length > 1) {\r\n      //check if file data exists\r\n      this.textMessage = '';\r\n      const message: SendMessageObject = {\r\n        //create message with file data\r\n        message: this.fileData.name,\r\n        base64Data: this.fileData.dataBase64,\r\n        contentType: this.fileData.type,\r\n      };\r\n      this.newMessageChange.emit(message); //emit new Message\r\n      this.deleteFile();\r\n    } else {\r\n      if (msg.length > 0) {\r\n        //check if message has content\r\n        if (msg.length <= environment.maxMessageLength) {\r\n          //check if message isnt to large\r\n          this.textMessage = '';\r\n          const message: SendMessageObject = {\r\n            //create message\r\n            message: msg,\r\n            base64Data: '',\r\n            contentType: 'Text',\r\n          };\r\n          this.newMessageChange.emit(message); //emit message\r\n        } else {\r\n          this.userAlert.setUserAlert(\r\n            'The Message is longer than the permitted amount of ' +\r\n              environment.maxMessageLength +\r\n              ' chars',\r\n            'error'\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fileChangeEvent(fileInput: any, fileType: FileType) {\r\n    //called when file is uploaded converts file to fileobject with the filehandler service\r\n    this.fileHandlerService\r\n      .fileHandler(fileInput, fileType)\r\n      .subscribe((result) => {\r\n        this.fileData = result;\r\n        if (this.fileData.error.length > 0) {\r\n          this.userAlert.setUserAlert(this.fileData.error, 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteFile() {\r\n    //deletes file\r\n    this.fileData.error = '';\r\n    this.fileData.dataBase64 = '';\r\n    this.fileData.isSaved = false;\r\n    this.fileData.name = '';\r\n    this.fileData.type = 'Document';\r\n  }\r\n}\r\n","<div class=\"messages-text-field-container\">\r\n  <form (ngSubmit)=\"sendMessage(textMessage)\">\r\n    <label class=\"document upload-container\">\r\n      <input type=\"file\" (change)=\"fileChangeEvent($event, 'Document')\" />\r\n      <fa-icon [icon]=\"faFile\"> </fa-icon>\r\n    </label>\r\n    <label class=\"image upload-container\">\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        (change)=\"fileChangeEvent($event, 'Picture')\"\r\n      />\r\n      <fa-icon [icon]=\"faCamera\"> </fa-icon>\r\n    </label>\r\n    <input [(ngModel)]=\"textMessage\" name=\"msgField\" autocomplete=\"off\" />\r\n    <div\r\n      *ngIf=\"fileData.isSaved && fileData.type == 'Picture'\"\r\n      class=\"image preview-container\"\r\n    >\r\n      <button (click)=\"deleteFile()\" class=\"close\">&times;</button>\r\n      <img [src]=\"fileData.dataBase64\" />\r\n    </div>\r\n    <div\r\n      *ngIf=\"fileData.isSaved && fileData.type == 'Document'\"\r\n      class=\"document preview-container\"\r\n    >\r\n      <button (click)=\"deleteFile()\" class=\"close\">&times;</button>\r\n      <fa-icon [icon]=\"faFileAlt\"></fa-icon>\r\n      <div class=\"document-name\">\r\n        {{ fileData.name }}\r\n      </div>\r\n    </div>\r\n    <button class=\"submit\" type=\"submit\">\r\n      <fa-icon [icon]=\"faArrowRight\"></fa-icon>\r\n    </button>\r\n  </form>\r\n</div>\r\n","/////////////////////////////////////////////\r\n/*\r\nSession Message Text Component\r\nDisplays the messages\r\n*/\r\n/////////////////////////////////////////////\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation,\r\n  Input,\r\n  ViewChild,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport {\r\n  MessagesService,\r\n  MessageObject,\r\n} from '../../services/messages.service';\r\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { messageType } from '../../services/messages.service';\r\nimport { UseralertComponent } from '../useralert/useralert.component';\r\nimport { UserAlertService } from '../../services/user-alert.service';\r\nimport { AppState } from '../../store/app.state';\r\nimport { Select } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'app-session-messages',\r\n  templateUrl: './session-messages.component.html',\r\n  styleUrls: ['./session-messages.component.scss'],\r\n})\r\nexport class SessionMessagesComponent implements OnInit {\r\n  constructor(\r\n    private messagesService: MessagesService,\r\n    private uAlert: UserAlertService\r\n  ) {}\r\n  messageList: MessageObject[] = []; //messages on the client side\r\n  faDownload = faArrowDown;\r\n  @ViewChild('scroll') private myScrollContainer: ElementRef;\r\n\r\n  @Input()\r\n  reconnectError: boolean = false;\r\n\r\n  searchTerm: string = '';\r\n  @Select(AppState.searchTerm)\r\n  searchTerm$;\r\n\r\n  ngOnInit(): void {\r\n    this.messagesService.onUpdate$.subscribe((messagesList) => {\r\n      //subscribe to message list and scroll to bottom after short delay (needed tolet some time to load data)\r\n      this.messageList = messagesList;\r\n      setTimeout(() => {\r\n        this.scrollToBottom();\r\n      }, 10);\r\n    });\r\n\r\n    this.messagesService.onScrollToId$.subscribe((id) => {\r\n      //Subscribe to scroll to id and scroll to element when called\r\n      this.scrollToElement(id.toString());\r\n    });\r\n\r\n    this.searchTerm$.subscribe((searchTerm: string) => {\r\n      //subscribe to search term from store\r\n      this.searchTerm = searchTerm;\r\n    });\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    //trys to sroll to the bottom of the message container\r\n    try {\r\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\r\n    } catch (err) {}\r\n  }\r\n\r\n  downloadFileFromId(fileId: number) {\r\n    //gets message base 64 data converts it to a blob and downloads it\r\n    console.log(fileId);\r\n    let messageData: MessageObject = this.messagesService.getMessagebyId(\r\n      fileId\r\n    );\r\n    fetch(messageData.base64Data)\r\n      .then((res) => res.blob())\r\n      .then((res) => {\r\n        let url = window.URL.createObjectURL(res);\r\n        this.download(messageData.message, url);\r\n      });\r\n  }\r\n\r\n  textMessageClicked(type: messageType, text: string) {\r\n    //checks if message isnt a status message and copys it to clipboard\r\n    if (type != 'status') {\r\n      this.copyStringToClipboard(text);\r\n    }\r\n  }\r\n\r\n  scrollToElement(id: string) {\r\n    //get element ref and scroll it into view\r\n    try {\r\n      let el = document.getElementById(id);\r\n      el.scrollIntoView({ block: 'center' });\r\n    } catch (err) {}\r\n  }\r\n\r\n  private copyStringToClipboard(str: string) {\r\n    //copys string to clipboard by creating a textarea and copying it with document.executeCommand\r\n    const selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = str;\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n    this.uAlert.setUserAlert('Successfully copied to clipboard', 'success');\r\n  }\r\n\r\n  private download(file: string, blobdata) {\r\n    //downloads a file by creating an blob url and clicking it\r\n    var element = document.createElement('a');\r\n    element.setAttribute('href', blobdata);\r\n    element.setAttribute('download', file);\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n  }\r\n}\r\n","<div class=\"messages-parent\">\r\n  <div #scroll class=\"messages-container\">\r\n    <ul class=\"messages\">\r\n      <li *ngFor=\"let item of messageList\">\r\n        <div\r\n          class=\"message-container\"\r\n          [ngClass]=\"{\r\n            left: item.type == 'receiver',\r\n            right: item.type == 'sender',\r\n            center: item.type == 'status'\r\n          }\"\r\n          id=\"{{ item.messageId + '' }}\"\r\n        >\r\n          <div class=\"user-icon\" *ngIf=\"item.type == 'receiver'\">\r\n            <img src=\"/assets/usericons/{{ item.userName }}.svg\" />\r\n          </div>\r\n          <div\r\n            *ngIf=\"item.contentType == 'Text'\"\r\n            (click)=\"textMessageClicked(item.type, item.message)\"\r\n            class=\"message\"\r\n            [innerHTML]=\"item.message | search: searchTerm:item.type\"\r\n          ></div>\r\n          <div *ngIf=\"item.contentType == 'Picture'\" class=\"picture\">\r\n            <img [src]=\"item.base64Data\" />\r\n            <div\r\n              (click)=\"downloadFileFromId(item.messageId)\"\r\n              class=\"download-icon\"\r\n            >\r\n              <fa-icon [icon]=\"faDownload\"></fa-icon>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"item.contentType == 'Document'\" class=\"document\">\r\n            <span\r\n              ><div\r\n                (click)=\"downloadFileFromId(item.messageId)\"\r\n                class=\"doc-icon\"\r\n              >\r\n                <fa-icon [icon]=\"faDownload\"></fa-icon>\r\n              </div>\r\n              <div\r\n                class=\"file-name\"\r\n                [innerHTML]=\"item.message | search: searchTerm:item.type\"\r\n              ></div>\r\n            </span>\r\n          </div>\r\n          <div class=\"user-icon\" *ngIf=\"item.type == 'sender'\">\r\n            <img src=\"/assets/usericons/{{ item.userName }}.svg\" />\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li *ngIf=\"reconnectError\">\r\n        <div class=\"back-to-start\">\r\n          <a href=\"/\"><button>Back to Start</button></a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","/////////////////////////////////////////////\r\n/*\r\nSession Menu Component\r\nDisplays menu with session id and user\r\n*/\r\n/////////////////////////////////////////////\r\nimport { UserData } from './../../pages/session/session.component';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { AppState } from '../../store/app.state';\r\nimport { Select } from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'app-sessionmenu',\r\n  templateUrl: './sessionmenu.component.html',\r\n  styleUrls: ['./sessionmenu.component.scss'],\r\n})\r\nexport class SessionmenuComponent implements OnInit {\r\n  sessionId: String = '0000';\r\n  userName: String = 'Not Found';\r\n  userInSession: Map<string, UserData>;\r\n  userId: string = '';\r\n  @Select(AppState.sessionId) sessionId$;\r\n  @Select(AppState.userName) userName$;\r\n  @Select(AppState.userInSession) userInSession$;\r\n  @Select(AppState.userId) userId$;\r\n\r\n  navOpen: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.sessionId$.subscribe((sessionId: string) => {\r\n      //subscribe to session id from store\r\n      this.sessionId = sessionId;\r\n    });\r\n\r\n    this.userName$.subscribe((userName: string) => {\r\n      //subscribe to userName from store\r\n      this.userName = userName;\r\n    });\r\n\r\n    this.userId$.subscribe((userId: string) => {\r\n      //subscribe to userId from store\r\n      this.userId = userId;\r\n    });\r\n\r\n    this.userInSession$.subscribe((userInSession: Map<string, UserData>) => {\r\n      //subscribe to user in session map from store\r\n      this.userInSession = userInSession;\r\n      this.userInSession.delete(this.userId);\r\n      console.log(this.userInSession);\r\n    });\r\n  }\r\n}\r\n","<div class=\"sidenav\" [ngClass]=\"{ open: navOpen, close: !navOpen }\">\r\n  <a href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"navOpen = false\"\r\n    >&times;</a\r\n  >\r\n  <div class=\"session-id\">\r\n    <h2>Session Id</h2>\r\n    <div class=\"id-box-container\">\r\n      <div class=\"session-id-box\">{{ sessionId[0] }}</div>\r\n      <div class=\"session-id-box\">{{ sessionId[1] }}</div>\r\n      <div class=\"session-id-box\">{{ sessionId[2] }}</div>\r\n      <div class=\"session-id-box\">{{ sessionId[3] }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"user\">\r\n    <h2>Active User</h2>\r\n    <ul>\r\n      <li class=\"list-seperator\"><h3>You:</h3></li>\r\n      <li>\r\n        <div class=\"user-icon\">\r\n          <img src=\"/assets/usericons/{{ userName }}.svg\" />\r\n        </div>\r\n        <div class=\"user-name\">\r\n          {{ userName }}\r\n        </div>\r\n      </li>\r\n      <li class=\"list-seperator\">\r\n        <h3>Other:</h3>\r\n      </li>\r\n      <li *ngFor=\"let user of userInSession | keyvalue\">\r\n        <div class=\"user-icon\">\r\n          <img src=\"/assets/usericons/{{ user.value.userName }}.svg\" />\r\n        </div>\r\n        <div class=\"user-name\">\r\n          {{ user.value.userName }}\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<span class=\"open-menu\" (click)=\"navOpen = true\">&#9776;</span>\r\n","/////////////////////////////////////////////\r\n/*\r\nuser alert Component\r\nDisplays user alerts at the top of the site. THe message can be succes (green) or error (red)\r\n*/\r\n/////////////////////////////////////////////\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport {\r\n  UserAlertService,\r\n  UserAlertTypes,\r\n} from '../../services/user-alert.service';\r\n\r\n@Component({\r\n  selector: 'app-useralert',\r\n  templateUrl: './useralert.component.html',\r\n  styleUrls: ['./useralert.component.scss'],\r\n})\r\nexport class UseralertComponent implements OnInit {\r\n  alertText: string = ''; //text of the alert\r\n  alertOpen: boolean = false;\r\n  alertType: UserAlertTypes = 'error';\r\n  private timeout;\r\n  private timeoutDelay: number = environment.userAlertTimeout;\r\n\r\n  constructor(private userAlertService: UserAlertService) {}\r\n  ngOnInit(): void {\r\n    this.userAlertService.onUpdate$.subscribe((alert) => {\r\n      //subsrcibe to user alert service and set new user alert on change\r\n      clearTimeout(this.timeout);\r\n      this.closeAlert();\r\n      this.alertText = alert.alert;\r\n      this.alertOpen = true;\r\n      this.alertType = alert.type;\r\n      this.timeout = setTimeout(() => {\r\n        this.closeAlert();\r\n      }, this.timeoutDelay);\r\n    });\r\n  }\r\n\r\n  private closeAlert() {\r\n    //closes alert\r\n    this.alertText = '';\r\n    this.alertOpen = false;\r\n  }\r\n}\r\n","<div\r\n  [ngClass]=\"{\r\n    open: alertOpen,\r\n    success: alertType == 'success',\r\n    error: alertType == 'error'\r\n  }\"\r\n  class=\"alert-container\"\r\n>\r\n  {{ alertText }}\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<app-useralert></app-useralert>\r\n<div class=\"landing-container\">\r\n  <div class=\"website-title\">Transfer<br />Tube.io</div>\r\n\r\n  <app-create-session></app-create-session>\r\n\r\n  <div class=\"or-container\">------- OR -------</div>\r\n\r\n  <app-join-session></app-join-session>\r\n</div>\r\n","/////////////////////////////////////////////\r\n/*\r\nSession Component\r\nManages Session setup\r\n*/\r\n/////////////////////////////////////////////\r\nimport { ContentType } from './../../services/messages.service';\r\nimport { ConnectService } from './../../services/connect.service';\r\nimport { Component, OnInit, ViewChild, ɵɵviewQuery } from '@angular/core';\r\nimport {\r\n  ActivatedRoute,\r\n  Router,\r\n  Event,\r\n  NavigationStart,\r\n  NavigationError,\r\n  NavigationEnd,\r\n} from '@angular/router';\r\nimport { SessionMessagesComponent } from '../../components/session-messages/session-messages.component';\r\nimport {\r\n  MessagesService,\r\n  MessageObject,\r\n} from '../../services/messages.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Store } from '@ngxs/store';\r\nimport { UserAlertService } from '../../services/user-alert.service';\r\nimport {\r\n  SetUserId,\r\n  SetSessionId,\r\n  SetUserName,\r\n  SetUserInSession,\r\n} from '../../store/app.action';\r\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport interface SessionInitData {\r\n  //Interface containing the session ini object\r\n  userId: string;\r\n  userName: string;\r\n  sessionId: string;\r\n}\r\n\r\nexport interface SendMessageObject {\r\n  //Interface containing the message data when sending one\r\n  message: string;\r\n  base64Data: string;\r\n  contentType: ContentType;\r\n}\r\n\r\nexport interface UserData {\r\n  //Interface containing User Data\r\n  userName: string;\r\n  userId: string;\r\n}\r\n\r\n@Component({\r\n  templateUrl: './session.component.html',\r\n  styleUrls: ['./session.component.scss'],\r\n})\r\nexport class SessionComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private connectService: ConnectService,\r\n    private messagesService: MessagesService,\r\n    private store: Store,\r\n    private uAlert: UserAlertService\r\n  ) {}\r\n  socket: SocketIOClient.Socket;\r\n  @ViewChild(SessionMessagesComponent)\r\n  messagesComponent: SessionMessagesComponent;\r\n  currentSessionId: string;\r\n  sessionError: boolean = false; //bool holding the session connection status\r\n  reconnectionError: boolean = false; //is fals after max reconnection attempts are reached\r\n  faExchange = faExchangeAlt;\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      //get Id route parameter\r\n      this.currentSessionId = params.get('id');\r\n      this.joinSession(this.currentSessionId); //join session with url parameter\r\n    });\r\n\r\n    this.router.events.subscribe((event: Event) => {\r\n      //router events\r\n      if (event instanceof NavigationStart) {\r\n        //do something on start activity\r\n      }\r\n\r\n      if (event instanceof NavigationError) {\r\n        console.error(event.error);\r\n      }\r\n\r\n      if (event instanceof NavigationEnd) {\r\n        this.messagesService.removeAllMessages();\r\n        this.socket.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  joinSession(id: string) {\r\n    this.connectService.checkSession(id).subscribe(\r\n      //connect with connect service initialise socket when succesfull\r\n      () => {\r\n        this.socketIni(this.connectService.joinSession(id));\r\n        this.sessionError = false;\r\n      },\r\n      (error) => {\r\n        console.log('Sorry diese Session gibt es nicht :(');\r\n        this.sessionError = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  socketIni(s: SocketIOClient.Socket) {\r\n    //initialize socket and listen to events\r\n    this.socket = s;\r\n    this.messagesService.removeAllMessages();\r\n\r\n    this.socket.on(environment.messageIdentifier, (msg: MessageObject) => {\r\n      this.messagesService.addMessage(msg);\r\n    });\r\n\r\n    this.socket.on('chunkResponse', (res) => {\r\n      this.messagesService.chunkResponse(res, this.socket);\r\n    });\r\n\r\n    this.socket.on('chunkData', (chunk) => {\r\n      this.messagesService.newChunk(chunk, this.socket);\r\n    });\r\n\r\n    this.socket.on('SessionIni', (ini: SessionInitData) => {\r\n      this.store.dispatch(new SetUserId(ini.userId));\r\n      this.store.dispatch(new SetSessionId(ini.sessionId));\r\n      this.store.dispatch(new SetUserName(ini.userName));\r\n      this.uAlert.setUserAlert('Connected', 'success');\r\n    });\r\n\r\n    this.socket.on('newUser', (userData) => {\r\n      const mappedData: Map<string, UserData> = new Map<string, UserData>(\r\n        Object.entries(userData)\r\n      );\r\n      this.store.dispatch(new SetUserInSession(mappedData));\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      this.sendStatus('Disconnected! Trying to reconnect...');\r\n      this.uAlert.setUserAlert('Disconnected! Trying to reconnect...', 'error');\r\n      console.log('disconnected');\r\n    });\r\n\r\n    this.socket.on('reconnect_failed', () => {\r\n      this.reconnectionError = true;\r\n      this.sendStatus(`Couldn't reconnect :(`);\r\n      this.uAlert.setUserAlert(`Couldn't reconnect : (`, 'error');\r\n      console.log('reconnect failed');\r\n    });\r\n  }\r\n\r\n  sendStatus(status: string) {\r\n    //sends a status message\r\n    const msg: MessageObject = {\r\n      //create message object\r\n      message: status,\r\n      messageId: -1,\r\n      userId: 'SERVER',\r\n      userName: 'Server',\r\n      contentType: 'Text',\r\n      base64Data: '',\r\n    };\r\n    this.messagesService.addMessage(msg); //add Message object\r\n  }\r\n\r\n  sendMessage(msg: SendMessageObject) {\r\n    //send message by emiting it to the socket\r\n    this.messagesService.sendMessage(this.socket, msg);\r\n  }\r\n}\r\n","<!--This Component is the parent component for the session route-->\r\n<div class=\"active-session-container\" *ngIf=\"!sessionError\">\r\n  <app-useralert></app-useralert>\r\n  <a class=\"site-name default\" href=\"/\">TrasferTube.io</a>\r\n  <a class=\"site-name mobile\" href=\"/\"\r\n    ><fa-icon [icon]=\"faExchange\"></fa-icon>.io</a\r\n  >\r\n  <app-sessionmenu></app-sessionmenu>\r\n  <app-search-messages></app-search-messages>\r\n  <app-session-messages [reconnectError]=\"reconnectionError\">\r\n  </app-session-messages>\r\n  <app-session-messages-text-field\r\n    (newMessageChange)=\"sendMessage($event)\"\r\n  ></app-session-messages-text-field>\r\n</div>\r\n\r\n<div class=\"session-error-container\" *ngIf=\"sessionError\">\r\n  <h1>\r\n    Sorry!!! <br />\r\n    The Session with the id '{{ currentSessionId }}' doesn't exist!\r\n  </h1>\r\n\r\n  <a href=\"/\"><button>Back to Start</button></a>\r\n</div>\r\n","/////////////////////this pipe is currently not used... It could be used to bypass the angular sanitizer\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport {\r\n  DomSanitizer,\r\n  SafeHtml,\r\n  SafeStyle,\r\n  SafeScript,\r\n  SafeUrl,\r\n  SafeResourceUrl,\r\n} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe',\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(protected sanitizer: DomSanitizer) {}\r\n\r\n  public transform(\r\n    value: any,\r\n    type: string\r\n  ): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n      case 'html':\r\n        return this.sanitizer.bypassSecurityTrustHtml(value);\r\n      case 'style':\r\n        return this.sanitizer.bypassSecurityTrustStyle(value);\r\n      case 'script':\r\n        return this.sanitizer.bypassSecurityTrustScript(value);\r\n      case 'url':\r\n        return this.sanitizer.bypassSecurityTrustUrl(value);\r\n      case 'resourceUrl':\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n      default:\r\n        throw new Error(`Invalid safe type specified: ${type}`);\r\n    }\r\n  }\r\n}\r\n","////////////////////////////////////////////\r\n/*\r\nPipe: SearchPipe\r\nuse: value | search: searchTerm : messageType\r\ndescription: checks if a message contains a searchterm and  if it highlites it with the mark tag, it also excludes status messages\r\n*/\r\n//////////////////////////////////////////\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { messageType } from '../services/messages.service';\r\n\r\n@Pipe({\r\n  name: 'search',\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(value: string, q: string, t: messageType): string {\r\n    if (value.includes(q) && t != 'status') {\r\n      const mark = `<mark>${q}</mark>`;\r\n      let regExp = new RegExp(q, 'g');\r\n      value = value.replace(regExp, mark);\r\n      return value;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n","////////////////////////////////////////////////////\r\n/*\r\nService: ConnectService\r\nDescription: This Service is used to create and join Sessions on the server\r\nInterfaces:\r\n  NewSessionResponse: Holds the respons when creating a new session\r\n    sessionId: Id of the created session\r\nFunctions:\r\n  newSession(); //sends a post request to the server and returns the session Id as a NewSessionRespons\r\n  checkSession(id: string); //sends a get request to the server to check if the session exists / returns a http respons\r\n  joinSession(id: string); //creates a new socket and connects it to the server / returns the connected socket\r\n*/\r\n///////////////////////////////////////////////////\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport * as io from 'socket.io-client';\r\nimport { Socket } from 'socket.io-client';\r\n\r\nexport interface NewSessionResponse {\r\n  sessionId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConnectService implements OnInit {\r\n  constructor(private http: HttpClient) {}\r\n  socketUrl: string = environment.socketEndpoint;\r\n  newSessionPath: string = '/new';\r\n  socket: SocketIOClient.Socket = null;\r\n\r\n  ngOnInit(): void {}\r\n\r\n  newSession(): Observable<NewSessionResponse> {\r\n    return this.http.post<NewSessionResponse>(\r\n      this.socketUrl + this.newSessionPath,\r\n      {}\r\n    );\r\n  }\r\n\r\n  checkSession(id: string): Observable<void> {\r\n    return this.http.get<void>(this.socketUrl + '/session/' + id);\r\n  }\r\n\r\n  joinSession(id: string): SocketIOClient.Socket {\r\n    if (this.socket) {\r\n      //check if there already is a socket if destroy it\r\n      this.socket.close();\r\n      this.socket = null;\r\n    }\r\n    const path: string = '/' + id;\r\n    this.socket = io(this.socketUrl, {\r\n      //connect to socket and set reconnection settings\r\n      path,\r\n      reconnection: environment.reconnectSettings.reconnection,\r\n      reconnectionDelay: environment.reconnectSettings.reconnectionDelay,\r\n      reconnectionDelayMax: environment.reconnectSettings.reconnectionDelayMax,\r\n      reconnectionAttempts: environment.reconnectSettings.reconnectionAttempts,\r\n    });\r\n    return this.socket;\r\n  }\r\n}\r\n","////////////////////////////////////////////////////\r\n/*\r\nService: FileHandlerService\r\nDescription: This Service is used to handle uploaded files. It checks if they are valid and converts them to base64 strings\r\nInterfaces:\r\n  fileResult: stores the data of a processed file\r\n    error: contains an error message if something went wrong\r\n    isSaved: boolean is true when the file is succesfully converted\r\n    dataBase64: contains the base 64 converted data\r\n    name: contains the file name\r\n    type: contains the fileType\r\n      Can be Picture or Document\r\nFunctions:\r\n  fileHandler:\r\n    params:\r\n      fileInput: file Input field value\r\n      fileType: fileType\r\n    returns:\r\n      an Observable with the fileResults\r\n*/\r\n///////////////////////////////////////////////////\r\nimport { environment } from './../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface fileResult {\r\n  error: string;\r\n  isSaved: boolean;\r\n  dataBase64: string;\r\n  name: string;\r\n  type: FileType;\r\n}\r\n\r\nexport type FileType = 'Picture' | 'Document';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FileHandlerService {\r\n  constructor() {}\r\n\r\n  fileHandler(fileInput, fileType: FileType): Observable<fileResult> {\r\n    let results: fileResult = {\r\n      //default file Results\r\n      error: '',\r\n      isSaved: false,\r\n      dataBase64: '',\r\n      name: '',\r\n      type: fileType,\r\n    };\r\n\r\n    results.error = '';\r\n    if (fileInput.target.files && fileInput.target.files[0]) {\r\n      //Check if Files\r\n      let max_size;\r\n      let allowed_types;\r\n      let forbidden_types;\r\n      let max_height;\r\n      let max_width;\r\n      if (fileType == 'Picture') {\r\n        //If Picture Set Picture limits\r\n        // Size Filter Bytes\r\n        max_size = environment.pictureLimits.maxSize;\r\n        allowed_types = environment.pictureLimits.allowedTypes;\r\n        max_height = environment.pictureLimits.maxHeight;\r\n        max_width = environment.pictureLimits.maxWidth;\r\n      } else if (fileType == 'Document') {\r\n        //If document set document limits\r\n        max_size = environment.fileLimits.maxSize;\r\n        forbidden_types = environment.fileLimits.forbiddenTypes;\r\n      }\r\n\r\n      if (fileInput.target.files[0].size > max_size) {\r\n        //Check for size\r\n        results.error = 'Maximum size allowed is ' + max_size / 1000 + 'Mb';\r\n        return Observable.create((observer) => {\r\n          observer.next(results);\r\n          observer.complete();\r\n        });\r\n      }\r\n\r\n      if (fileType == 'Picture') {\r\n        //Check allowed types when it is a picture\r\n        if (!allowed_types.includes(fileInput.target.files[0].type)) {\r\n          results.error = `Only these FileTypes are allowd: ( ${allowed_types.toString()} )`;\r\n          return Observable.create((observer) => {\r\n            observer.next(results);\r\n            observer.complete();\r\n          });\r\n        }\r\n      } else if (fileType == 'Document') {\r\n        //Check forbidden types when it is a document\r\n        if (forbidden_types.includes(fileInput.target.files[0].type)) {\r\n          results.error = `Sorry these file types are forbidden: ( ${allowed_types.toString()} )`;\r\n          return Observable.create((observer) => {\r\n            observer.next(results);\r\n            observer.complete();\r\n          });\r\n        }\r\n      }\r\n\r\n      results.name = fileInput.target.files[0].name; // set file name\r\n\r\n      const reader = new FileReader();\r\n      return Observable.create((observer) => {\r\n        //create and return observable\r\n        reader.onload = (e: any) => {\r\n          if (fileType == 'Picture') {\r\n            //make additional size checks when it is Picture\r\n            const image = new Image();\r\n            image.src = e.target.result;\r\n            image.onload = (rs) => {\r\n              const img_height = rs.currentTarget['height'];\r\n              const img_width = rs.currentTarget['width'];\r\n\r\n              if (img_height > max_height && img_width > max_width) {\r\n                results.error =\r\n                  'Maximum dimentions allowed ' +\r\n                  max_height +\r\n                  '*' +\r\n                  max_width +\r\n                  'px';\r\n                observer.next(results);\r\n                observer.complete();\r\n              } else {\r\n                results.dataBase64 = e.target.result; //set base 64 data\r\n                results.isSaved = true;\r\n                observer.next(results);\r\n                observer.complete();\r\n              }\r\n            };\r\n          } else if (fileType == 'Document') {\r\n            results.dataBase64 = e.target.result; //set base 64 data\r\n            results.isSaved = true;\r\n            observer.next(results);\r\n            observer.complete();\r\n          }\r\n        };\r\n\r\n        reader.readAsDataURL(fileInput.target.files[0]);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { environment } from './../../environments/environment';\r\nimport { SendMessageObject } from './../pages/session/session.component';\r\n////////////////////////////////////////////////////\r\n/*\r\nService: MessagesService\r\nDescription: This Service is used to handle new messages. The session-messages component listens to the onUpdate observable to check for new messages\r\n\r\nTypes:\r\n  ContentType: Used to describe which kind of Content is in a message\r\n  messageType: Used to describe the origin of the message\r\nInterfaces:\r\n  MessageObject: contains the Message data\r\n    message: the message\r\n    messageId: number which identifies the message, is unique\r\n    userId: Id of the sender\r\n    userName: Name of the sender\r\n    contentType: Type of the content\r\n    base64Data: contains the file data when one is sent\r\n    data: date currently not used\r\n    type: contains the origin of the message / This is determined in the message service\r\n\r\nFunctions:\r\n  addMessage(message: string): determines origin, formats message and pushes it to the messages array\r\n  removeAllMessages(): emptys messages array\r\n  scrollToId(id: number): calls scroll to element in the messages component (component listens to observable)\r\n*/\r\n///////////////////////////////////////////////////\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AppState } from '../store/app.state';\r\nimport { Select } from '@ngxs/store';\r\nimport { managers } from 'socket.io-client';\r\n\r\nexport type ContentType = 'Document' | 'Picture' | 'Text';\r\n\r\nexport type messageType = 'sender' | 'receiver' | 'status';\r\n\r\nexport interface MessageObject {\r\n  message: string;\r\n  messageId: number;\r\n  userId: string;\r\n  userName: string;\r\n  contentType: ContentType;\r\n  base64Data: string;\r\n  date?: Date;\r\n  type?: messageType;\r\n}\r\n\r\nexport type ChunkType = 'start' | 'middle' | 'end';\r\n\r\nexport interface Chunk {\r\n  chunkType: ChunkType;\r\n  chunkData: string;\r\n  chunkID: string;\r\n  chunkIndex: number;\r\n  parentMessageId: number;\r\n  senderId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessagesService {\r\n  constructor() {\r\n    this.userId$.subscribe((uId: string) => {\r\n      console.log('UID changed');\r\n      this.userId = uId;\r\n    });\r\n  }\r\n\r\n  @Select(AppState.userId)\r\n  userId$;\r\n  userId: string = null;\r\n\r\n  chunkQueue: Chunk[] = [];\r\n\r\n  private onUpdate$$ = new BehaviorSubject<MessageObject[]>([]);\r\n  private onScrollToId$$ = new BehaviorSubject<number>(0);\r\n  messages: MessageObject[] = [];\r\n  chunkMessageId = 0;\r\n  receivingMessages: Map<string, MessageObject> = new Map<\r\n    string,\r\n    MessageObject\r\n  >();\r\n\r\n  get onUpdate$(): Observable<MessageObject[]> {\r\n    return this.onUpdate$$.asObservable();\r\n  }\r\n\r\n  get onScrollToId$(): Observable<number> {\r\n    return this.onScrollToId$$.asObservable();\r\n  }\r\n\r\n  addMessage(msg: MessageObject) {\r\n    if (msg.userId === 'SERVER') {\r\n      msg.type = 'status';\r\n    } else if (msg.userId == this.userId) {\r\n      msg.type = 'sender';\r\n    } else {\r\n      msg.type = 'receiver';\r\n    }\r\n    if (msg.contentType == 'Text') {\r\n      msg = this.formatLink(msg);\r\n    }\r\n    this.messages.push(msg);\r\n    this.onUpdate$$.next(this.messages);\r\n  }\r\n\r\n  sendMessage(socket: SocketIOClient.Socket, msg: SendMessageObject) {\r\n    //sends messages and handles the file transmission\r\n    this.chunkMessageId++;\r\n    if (msg.base64Data.length > 1) {\r\n      let chunkedData = this.chunkString(\r\n        msg.base64Data,\r\n        environment.chunkSize,\r\n        this.userId + this.chunkMessageId,\r\n        -1,\r\n        this.userId\r\n      );\r\n      this.chunkQueue = this.chunkQueue.concat(chunkedData);\r\n      msg.base64Data = this.userId + this.chunkMessageId;\r\n      socket.emit(environment.messageIdentifier, msg);\r\n    } else {\r\n      socket.emit(environment.messageIdentifier, msg);\r\n    }\r\n  }\r\n\r\n  chunkResponse(res, socket: SocketIOClient.Socket) {\r\n    if ((res.res = 'next')) {\r\n      if (this.chunkQueue.length >= 1) {\r\n        socket.emit('chunkData', this.chunkQueue[0]);\r\n        this.chunkQueue.shift();\r\n      }\r\n    }\r\n  }\r\n\r\n  newChunk(chunk: Chunk, socket: SocketIOClient.Socket) {\r\n    if (chunk.chunkType == 'start') {\r\n      let msg: MessageObject = {\r\n        //create message object\r\n        message: status,\r\n        messageId: -1,\r\n        userId: '',\r\n        userName: '',\r\n        contentType: 'Text',\r\n        base64Data: '',\r\n      };\r\n      Object.assign(msg, this.getMessagebyId(Number(chunk.parentMessageId)));\r\n      // console.log(msg);\r\n      msg.base64Data = chunk.chunkData;\r\n      this.receivingMessages.set(chunk.chunkID, msg);\r\n    } else if (chunk.chunkType == 'middle') {\r\n      let msg = this.receivingMessages.get(chunk.chunkID);\r\n      msg.base64Data += chunk.chunkData;\r\n      this.receivingMessages.set(chunk.chunkID, msg);\r\n    } else if (chunk.chunkType == 'end') {\r\n      let msg = this.receivingMessages.get(chunk.chunkID);\r\n      msg.base64Data += chunk.chunkData;\r\n      this.messages[\r\n        this.getMessageIndexbyId(Number(chunk.parentMessageId))\r\n      ] = msg;\r\n      this.receivingMessages.delete(chunk.chunkID);\r\n      console.log(msg);\r\n\r\n      return;\r\n    }\r\n\r\n    let msg = this.receivingMessages.get(chunk.chunkID);\r\n    const cres = {\r\n      res: 'next',\r\n      lastChunkIndex: chunk.chunkIndex,\r\n      parentMessageId: chunk.parentMessageId,\r\n      senderId: this.userId,\r\n    };\r\n    socket.emit('chunkResponse', cres);\r\n  }\r\n\r\n  removeAllMessages() {\r\n    this.messages = [];\r\n    this.onUpdate$$.next(this.messages);\r\n  }\r\n\r\n  scrollToId(id: number) {\r\n    this.onScrollToId$$.next(id);\r\n  }\r\n\r\n  private chunkString(\r\n    str: string,\r\n    len: number,\r\n    chunkId: string,\r\n    messageId: number,\r\n    senderId: string\r\n  ): Chunk[] {\r\n    //splits string into chunks\r\n    const size = Math.ceil(str.length / len);\r\n    const r: Chunk[] = Array(size);\r\n    let offset = 0;\r\n\r\n    for (let i = 0; i < size; i++) {\r\n      r[i] = {\r\n        chunkData: str.substr(offset, len),\r\n        chunkType: 'middle',\r\n        chunkID: chunkId,\r\n        senderId: senderId,\r\n        chunkIndex: i,\r\n        parentMessageId: messageId,\r\n      };\r\n      offset += len;\r\n    }\r\n\r\n    if (r.length == 1) {\r\n      r.push({\r\n        chunkData: '',\r\n        chunkID: chunkId,\r\n        chunkType: 'end',\r\n        senderId: senderId,\r\n        chunkIndex: 1,\r\n        parentMessageId: messageId,\r\n      });\r\n    }\r\n\r\n    r[0].chunkType = 'start';\r\n    r[r.length - 1].chunkType = 'end';\r\n\r\n    return r;\r\n  }\r\n\r\n  getMessageIndexbyId(id: number): number {\r\n    //loops message array and checks if message matches id, returns the index when found\r\n    for (let i = 0; i < this.messages.length; i++) {\r\n      if (this.messages[i].messageId == id) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  getMessagebyId(id: number): MessageObject {\r\n    //loops message array and checks if message matches id, returns the message when found\r\n    for (let i = 0; i < this.messages.length; i++) {\r\n      if (this.messages[i].messageId == id) {\r\n        return this.messages[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  private ngOnDestroy() {\r\n    this.onUpdate$$.complete();\r\n  }\r\n\r\n  private formatLink(msg: MessageObject): MessageObject {\r\n    //formats a link to make it clickable\r\n    const text: string = msg.message;\r\n    if (this.isUrl(text)) {\r\n      msg.message = `<a href=\"${text}\" target=\"_blank\">${text}</a>`;\r\n    }\r\n    return msg;\r\n  }\r\n\r\n  private isUrl(url: string): boolean {\r\n    //Checks if message is a url\r\n    let pattern = new RegExp(\r\n      '^(https?:\\\\/\\\\/)?' + // https protocol\r\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n        '(\\\\#[-a-z\\\\d_]*)?$',\r\n      'i'\r\n    ); // fragment locator\r\n    return !!pattern.test(url);\r\n  }\r\n}\r\n","////////////////////////////////////////////////////\r\n/*\r\nService: UserAlertService\r\nDescription: This Service is used to Display User Alerts\r\n\r\nInterfaces:\r\nUserAlertObject: contains the data for an useralert\r\n  alert: the alert\r\n  type: type of alert - affects only the color when displayed\r\n\r\nFunctions:\r\nsetUserAlert(alert: string, type: USerAlertTypes) //set the alert data and emits an new alert to the observable\r\n*/\r\n///////////////////////////////////////////////////\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport type UserAlertTypes = 'success' | 'error';\r\n\r\nexport interface UserAlertObject {\r\n  alert: string;\r\n  type: UserAlertTypes;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAlertService {\r\n  constructor() {}\r\n  private alertData: UserAlertObject = {\r\n    alert: '',\r\n    type: 'error',\r\n  };\r\n\r\n  private onUpdate$$ = new BehaviorSubject<UserAlertObject>(this.alertData);\r\n\r\n  get onUpdate$(): Observable<UserAlertObject> {\r\n    return this.onUpdate$$.asObservable();\r\n  }\r\n\r\n  setUserAlert(text: string, type: UserAlertTypes) {\r\n    this.alertData.alert = text;\r\n    this.alertData.type = type;\r\n    this.onUpdate$$.next(this.alertData);\r\n  }\r\n}\r\n","import { UserData } from '../pages/session/session.component';\r\n\r\nexport class SetUserId {\r\n  static type = 'SetUserId';\r\n  constructor(public userId: string) {}\r\n}\r\n\r\nexport class SetSessionId {\r\n  static type = 'SetSessionId';\r\n  constructor(public sessionId: string) {}\r\n}\r\n\r\nexport class SetUserName {\r\n  static type = 'SetUserName';\r\n  constructor(public userName: string) {}\r\n}\r\n\r\nexport class SetUserInSession {\r\n  static type = 'SetUserInSession';\r\n  constructor(public userInSession: Map<string, UserData>) {}\r\n}\r\n\r\nexport class SetSearchTerm {\r\n  static type = 'SetSearchTerm';\r\n  constructor(public searchTerm: string) {}\r\n}\r\n","//////Use\r\n/*\r\n  @Select(AppState.userId)\r\n  userId$;\r\n\r\n  ngOninit:\r\n    this.userId$.subscribe((userId: string) => {\r\n      this.userId = userId;\r\n    });\r\n\r\n  Set:\r\n  constructor: private store: Store\r\n\r\n  this.store.dispatch(new SetUserId(x));\r\n*/\r\n\r\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\r\nimport {\r\n  SetUserId,\r\n  SetSessionId,\r\n  SetUserName,\r\n  SetUserInSession,\r\n} from './app.action';\r\nimport { UserData } from '../pages/session/session.component';\r\nimport { SetSearchTerm } from './app.action';\r\n\r\nexport type SearchType = 'gifs' | 'stickers';\r\n\r\nexport interface AppStateModel {\r\n  userId: string;\r\n  sessionId: string;\r\n  userName: string;\r\n  userInSession: Map<string, UserData>;\r\n  searchTerm: string;\r\n}\r\n\r\n@State<AppStateModel>({\r\n  name: 'appState',\r\n  defaults: {\r\n    userId: null,\r\n    sessionId: '0000',\r\n    userName: null,\r\n    userInSession: new Map<string, UserData>(),\r\n    searchTerm: 'this',\r\n  },\r\n})\r\nexport class AppState {\r\n  @Selector()\r\n  static userId(state: AppStateModel) {\r\n    return state.userId;\r\n  }\r\n\r\n  @Action(SetUserId)\r\n  setUserId(context: StateContext<AppStateModel>, action: SetUserId) {\r\n    context.patchState({\r\n      userId: action.userId,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static sessionId(state: AppStateModel) {\r\n    return state.sessionId;\r\n  }\r\n\r\n  @Action(SetSessionId)\r\n  setSessionId(context: StateContext<AppStateModel>, action: SetSessionId) {\r\n    context.patchState({\r\n      sessionId: action.sessionId,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static userName(state: AppStateModel) {\r\n    return state.userName;\r\n  }\r\n\r\n  @Action(SetUserName)\r\n  setUserName(context: StateContext<AppStateModel>, action: SetUserName) {\r\n    context.patchState({\r\n      userName: action.userName,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static userInSession(state: AppStateModel) {\r\n    return state.userInSession;\r\n  }\r\n\r\n  @Action(SetUserInSession)\r\n  setUserInSession(\r\n    context: StateContext<AppStateModel>,\r\n    action: SetUserInSession\r\n  ) {\r\n    context.patchState({\r\n      userInSession: action.userInSession,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static searchTerm(state: AppStateModel) {\r\n    return state.searchTerm;\r\n  }\r\n\r\n  @Action(SetSearchTerm)\r\n  setSearchTerm(context: StateContext<AppStateModel>, action: SetSearchTerm) {\r\n    context.patchState({\r\n      searchTerm: action.searchTerm,\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  socketEndpoint: 'https://transfertube.herokuapp.com', //'http://62.178.37.97:4269' //'http://172.16.40.80:4269', //http://localhost:3000\r\n  messageIdentifier: 'chat message',\r\n  maxMessageLength: 10000, //in chars\r\n  userAlertTimeout: 3000,\r\n  chunkSize: 100000,\r\n  reconnectSettings: {\r\n    reconnection: true,\r\n    reconnectionDelay: 500,\r\n    reconnectionDelayMax: 5000,\r\n    reconnectionAttempts: 5,\r\n  },\r\n  pictureLimits: {\r\n    maxSize: 10485760, //10Mb (in bytes)\r\n    allowedTypes: ['image/png', 'image/jpeg'],\r\n    maxHeight: 15200,\r\n    maxWidth: 25600,\r\n  },\r\n  fileLimits: {\r\n    maxSize: 104857600, //100Mb (in bytes)\r\n    forbiddenTypes: [],\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":"webpack:///"}