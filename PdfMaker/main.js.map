{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pipes/number-formatter.pipe.ts","./src/app/service/image-compress.service.ts","./src/app/service/obj-to-xlsx.service.ts","./src/app/sites/landing/landing.component.ts","./src/app/sites/landing/landing.component.html","./src/app/sites/pdf/pdf.component.ts","./src/app/sites/pdf/pdf.component.html","./src/app/sites/pictures/pictures.component.ts","./src/app/sites/pictures/pictures.component.html","./src/app/sites/settings/settings.component.ts","./src/app/sites/settings/settings.component.html","./src/app/store/app.action.ts","./src/app/store/app.state.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { SettingsComponent } from './sites/settings/settings.component';\r\nimport { PicturesComponent } from './sites/pictures/pictures.component';\r\nimport { LandingComponent } from './sites/landing/landing.component';\r\nimport { PdfComponent } from './sites/pdf/pdf.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'pdf',\r\n    component: PdfComponent,\r\n  },\r\n  {\r\n    path: 'pictures',\r\n    component: PicturesComponent,\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: SettingsComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    component: LandingComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'PdfMaker';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { AppState } from './store/app.state';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PdfComponent } from './sites/pdf/pdf.component';\r\nimport { LandingComponent } from './sites/landing/landing.component';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\r\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\r\nimport { PicturesComponent } from './sites/pictures/pictures.component';\r\nimport { NgxImageCompressService } from 'ngx-image-compress';\r\nimport { SettingsComponent } from './sites/settings/settings.component';\r\nimport { NumberFormatterPipe } from './pipes/number-formatter.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PdfComponent,\r\n    LandingComponent,\r\n    PicturesComponent,\r\n    SettingsComponent,\r\n    NumberFormatterPipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    NgxsModule.forRoot([AppState]),\r\n    NgxsLoggerPluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot(),\r\n  ],\r\n  providers: [NgxImageCompressService],\r\n  bootstrap: [AppComponent],\r\n  exports: [NumberFormatterPipe],\r\n})\r\nexport class AppModule {}\r\n\r\n// after building replace base href with:\r\n/*    <script>\r\n      document.write('<base href=\"' + document.location + '\" />');\r\n    </script>\r\n    */\r\n","import { formattedError } from '@angular/compiler';\r\nimport { calcPossibleSecurityContexts } from '@angular/compiler/src/template_parser/binding_parser';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'numberFormatter',\r\n})\r\nexport class NumberFormatterPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    let formatterdVal: string;\r\n    if (value != undefined) {\r\n      formatterdVal = this.reverse(this.chunk(value, 3).join('.'));\r\n    } else {\r\n      formatterdVal = value;\r\n    }\r\n    return formatterdVal;\r\n  }\r\n\r\n  private chunk(str: string, n: number) {\r\n    var ret = [];\r\n    var i;\r\n    str = this.reverse(str.toString());\r\n    var len = str.length;\r\n\r\n    for (i = 0; i < len; i += n) {\r\n      ret.push(str.substr(i, n));\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  private reverse(str: string): string {\r\n    let reversed = '';\r\n    for (var i = str.length - 1; i >= 0; i--) {\r\n      reversed += str[i];\r\n    }\r\n    return reversed;\r\n  }\r\n}\r\n","import { NgxImageCompressService } from 'ngx-image-compress';\r\nimport { Injectable, Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImageCompressService {\r\n  constructor(private imageCompress: NgxImageCompressService) {}\r\n\r\n  compressFile(image, fileName): Observable<string> {\r\n    let orientation = -1;\r\n    const targetSize: number = 1;\r\n    let currentSize: number =\r\n      this.imageCompress.byteCount(image) / (1024 * 1024);\r\n    console.log(currentSize);\r\n    if (currentSize > targetSize) {\r\n      return Observable.create((observer) => {\r\n        this.imageCompress\r\n          .compressFile(image, orientation, 20, 20)\r\n          .then((result) => {\r\n            console.log(\r\n              fileName\r\n              //this.imageCompress.byteCount(result) / (1024 * 1024)\r\n            );\r\n            // create file from byte\r\n            const imageName = fileName;\r\n            // call method that creates a blob from dataUri\r\n            const imageBlob = this.dataURItoBlob(result.split(',')[1]);\r\n            //imageFile created below is the new compressed file which can be send to API in form data\r\n            const imageFile = new File([result], imageName, {\r\n              type: 'image/jpeg',\r\n            });\r\n            //this.imageFileData.push(imageFile);\r\n            observer.next(result);\r\n            observer.complete();\r\n          });\r\n      });\r\n    } else {\r\n      return Observable.create((observer) => {\r\n        const imageBlob = this.dataURItoBlob(image.split(',')[1]);\r\n        //imageFile created below is the new compressed file which can be send to API in form data\r\n        const imageFile = new File([image], fileName, {\r\n          type: 'image/jpeg',\r\n        });\r\n        observer.next(image);\r\n        observer.complete();\r\n      });\r\n    }\r\n  }\r\n  dataURItoBlob(dataURI): Blob {\r\n    const byteString = window.atob(dataURI);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([int8Array], { type: 'image/jpeg' });\r\n    return blob;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ObjToXlsxService {\r\n  constructor() {}\r\n  sheetname: string = 'sheet';\r\n\r\n  downloadXlsx(data: object[], filename: string = 'FilterdExcel') {\r\n    filename = filename + '.xlsx';\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(data);\r\n\r\n    XLSX.utils.book_append_sheet(wb, ws, this.sheetname);\r\n    XLSX.writeFile(wb, filename);\r\n  }\r\n}\r\n","import { ExcelStructure } from './../../../environments/environment';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport { SetExcelData } from 'src/app/store/app.action';\r\nimport { Store } from '@ngxs/store';\r\nimport { Router } from '@angular/router';\r\nimport { compilePipeFromMetadata } from '@angular/compiler';\r\n\r\n@Component({\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  constructor(private store: Store, private router: Router) {}\r\n  arrayBuffer;\r\n  loader: boolean = false;\r\n\r\n  ngOnInit(): void {}\r\n\r\n  convertExcel(event) {\r\n    this.loader = true;\r\n    const file = event.target.files[0];\r\n    let fileReader = new FileReader();\r\n    fileReader.readAsArrayBuffer(file);\r\n    fileReader.onload = (e) => {\r\n      this.arrayBuffer = fileReader.result;\r\n      var data = new Uint8Array(this.arrayBuffer);\r\n      var arr = new Array();\r\n      for (var i = 0; i != data.length; ++i) {\r\n        arr[i] = String.fromCharCode(data[i]);\r\n      }\r\n      var bstr = arr.join('');\r\n      var workbook = XLSX.read(bstr, { type: 'binary' });\r\n      var first_sheet_name = workbook.SheetNames[0];\r\n      var worksheet = workbook.Sheets[first_sheet_name];\r\n\r\n      console.log(worksheet);\r\n      let filelist: ExcelStructure[] = XLSX.utils.sheet_to_json(worksheet, {\r\n        raw: true,\r\n      });\r\n\r\n      filelist = this.clearData(filelist);\r\n\r\n      this.store.dispatch(new SetExcelData(filelist));\r\n      this.loader = false;\r\n      this.router.navigate(['pictures']);\r\n    };\r\n  }\r\n\r\n  clearData(data: ExcelStructure[]): ExcelStructure[] {\r\n    let tempData: ExcelStructure[] = data.slice();\r\n    for (let i = data.length - 1; i >= 0; i--) {\r\n      if (this.isNumeric(data[i].Zuname) || data[i].Zuname == undefined) {\r\n        console.log(data[i]);\r\n        tempData.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    return tempData;\r\n  }\r\n\r\n  private isNumeric(value): boolean {\r\n    return /^-?\\d+$/.test(value);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"file-container\">\r\n    <label class=\"file-upload\">\r\n      <input\r\n        type=\"file\"\r\n        class=\"form-control\"\r\n        (change)=\"convertExcel($event)\"\r\n        accept=\".csv,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n      />\r\n      Upload Excel file\r\n    </label>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"loader\" class=\"loader\">\r\n  <div class=\"sk-folding-cube\">\r\n    <div class=\"sk-cube1 sk-cube\"></div>\r\n    <div class=\"sk-cube2 sk-cube\"></div>\r\n    <div class=\"sk-cube4 sk-cube\"></div>\r\n    <div class=\"sk-cube3 sk-cube\"></div>\r\n  </div>\r\n  loading data...\r\n</div>\r\n","import { ObjToXlsxService } from './../../service/obj-to-xlsx.service';\r\nimport {\r\n  ExcelStructure,\r\n  environment,\r\n} from './../../../environments/environment';\r\nimport { AppState } from './../../store/app.state';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Select } from '@ngxs/store';\r\nimport { Router } from '@angular/router';\r\nimport * as XLSX from 'xlsx';\r\n\r\n@Component({\r\n  templateUrl: './pdf.component.html',\r\n  styleUrls: ['./pdf.component.scss', '../../paper.scss'],\r\n})\r\nexport class PdfComponent implements OnInit {\r\n  constructor(private router: Router, private objToXlsx: ObjToXlsxService) {}\r\n\r\n  showUi: boolean = true;\r\n\r\n  @Select(AppState.filterdExcelData)\r\n  excelData$;\r\n  excelData: ExcelStructure[] = undefined;\r\n\r\n  @Select(AppState.pictures)\r\n  pictures$;\r\n  pictures: Map<string, string> = new Map<string, string>();\r\n  fileUrlPictures: Map<string, string> = new Map<string, string>();\r\n\r\n  ngOnInit(): void {\r\n    this.excelData$.subscribe((data: ExcelStructure[]) => {\r\n      this.excelData = data;\r\n      if (environment.requireExcel && this.excelData[0] == undefined) {\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n    this.pictures$.subscribe((data: Map<string, string>) => {\r\n      this.pictures = data;\r\n    });\r\n  }\r\n\r\n  getFileName(file: string): string {\r\n    let names: string[] = file.split('.');\r\n    names.pop();\r\n    file = names.join('.');\r\n    return file;\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['settings']);\r\n  }\r\n\r\n  print() {\r\n    this.showUi = false;\r\n    setTimeout(() => {\r\n      window.print();\r\n      this.showUi = true;\r\n    }, 10);\r\n  }\r\n\r\n  downloadExcel() {\r\n    this.objToXlsx.downloadXlsx(this.excelData);\r\n  }\r\n}\r\n","<!--<div class=\"book\">\r\n  <div class=\"page\">\r\n    <div class=\"subpage\">Page 1/2 sdaasd dsa das das</div>\r\n  </div>\r\n  <div class=\"page\">\r\n    <div class=\"subpage\">Page 2/2</div>\r\n    dskdasdk asdl\r\n  </div>\r\n</div>\r\n-->\r\n<div class=\"container\">\r\n  <div *ngIf=\"showUi\" (click)=\"back()\" class=\"back-button-container\">\r\n    &larr;\r\n  </div>\r\n  <div *ngIf=\"showUi\" (click)=\"print()\" class=\"print-button-container\">\r\n    download pdf\r\n  </div>\r\n  <div *ngIf=\"showUi\" (click)=\"downloadExcel()\" class=\"excel-button-container\">\r\n    download excel\r\n  </div>\r\n  <div class=\"book A4\">\r\n    <section class=\"sheet padding-10mm\">\r\n      <div class=\"sheet-container\">\r\n        <div class=\"top-data-container\">\r\n          <div class=\"top-data\">\r\n            <div class=\"inventar-nr\">Inv. Nr. G-Ga-001</div>\r\n            <div class=\"kategorie\">Römisch</div>\r\n            <div class=\"jahr\">3 - 4 Jahrhundert n. Chr</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"image-container\">\r\n          <img height=\"300px\" src=\"assets/Feuer.jpg\" />\r\n        </div>\r\n        <div class=\"bild-daten-container\">\r\n          <div class=\"bild-daten\">\r\n            <div class=\"bild-name\">\r\n              <b>Mumienporträt einer Dame, 3.-4. Jhd. n Chr.</b>\r\n            </div>\r\n            <div class=\"technik\">Tempera auf Leinen</div>\r\n            <div class=\"abmessungen\">H 52 cm (Rahmen: 66,7 x 48,4 cm)</div>\r\n            <div class=\"referenz\">Ref. 1254</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bild-metadaten-container\">\r\n          <ul>\r\n            <!--   <li>\r\n              <div class=\"label\">Expertise</div>\r\n              <div class=\"metadaten\">\r\n                Christoph Bacher, Archäologie Ancient Art, Wien (2019)\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Provenienz</div>\r\n              <div class=\"metadaten\">\r\n                California Museum of Ancient Art, USA Privatsammlung, Frankreich\r\n                (erworben 1969); Galerie Le Corneur Roudillon, Paris\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Ausstellung</div>\r\n              <div class=\"metadaten\">Galerie Le Corneur Roudillon, Paris</div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Literatur</div>\r\n              <div class=\"metadaten\">\r\n                K. Parlasca, Ritratti di Mummie, Serie B-Volume III, Repertorio\r\n                d’Arte dell’Egitto Greco-Romano, Rome 1980, Nr. 588, Tf. 141,1;\r\n                Abb. in Farbe in Volume IV (Tafel XV), (Kopie beiliegend)\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Bemerkung</div>\r\n              <div class=\"metadaten\">0</div>\r\n            </li>-->\r\n          </ul>\r\n        </div>\r\n        <div class=\"kauf-daten-container\">\r\n          <ul>\r\n            <li>\r\n              <div class=\"label\">Kaufdatum / Händler:</div>\r\n              <div class=\"metadaten\">\r\n                2019, 11. 11. / Christoph Bacher Archäologie Ancient Art, Wien\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Kaufpreis:</div>\r\n              <div class=\"metadaten\">{{ \"40000\" | numberFormatter }} €</div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Versicherungssumme:</div>\r\n              <div class=\"metadaten\">\r\n                {{ \"1234567890\" | numberFormatter }} €\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Standort:</div>\r\n              <div class=\"metadaten\">Wien Eiswerk</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section *ngFor=\"let item of excelData\" class=\"sheet padding-10mm\">\r\n      <!-- {{ item.Kunstler }}\r\n      {{ item.Bildname }}\r\n      {{ item.Jahr }}\r\n      {{ item.Preis }}\r\n      <img src=\"{{ pictures.get(item.Bildname) }}\" />-->\r\n      <div class=\"sheet-container\">\r\n        <div class=\"top-data-container\">\r\n          <div class=\"top-data\">\r\n            <div class=\"inventar-nr\">Inv. Nr. {{ item.InvNr }}</div>\r\n            <div class=\"kategorie\">{{ item.Name }}</div>\r\n            <div class=\"jahr\">{{ item.Lebensdaten }}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"image-container\">\r\n          <img height=\"300px\" src=\"{{ pictures.get(item.DateinameAbb) }}\" />\r\n        </div>\r\n        <div class=\"bild-daten-container\">\r\n          <div class=\"bild-daten\">\r\n            <div class=\"bild-name\">\r\n              <b>{{ item.Titel }}</b>\r\n            </div>\r\n            <div class=\"technik\">{{ item.Technik }}</div>\r\n            <div class=\"abmessungen\">{{ item.Abmessungen }}</div>\r\n            <div class=\"referenz\">{{ item.Bezeichnung }}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bild-metadaten-container\">\r\n          <ul>\r\n            <li *ngIf=\"item.Expertiese != undefined\">\r\n              <div class=\"label\">Expertise</div>\r\n              <div class=\"metadaten\">\r\n                {{ item.Expertiese }}\r\n              </div>\r\n            </li>\r\n            <li *ngIf=\"item.Prov != undefined\">\r\n              <div class=\"label\">Provenienz</div>\r\n              <div class=\"metadaten\">\r\n                {{ item.Prov }}\r\n              </div>\r\n            </li>\r\n            <li *ngIf=\"item.Ausst != undefined\">\r\n              <div class=\"label\">Ausstellung</div>\r\n              <div class=\"metadaten\">{{ item.Ausst }}</div>\r\n            </li>\r\n            <li *ngIf=\"item.Lit1 != undefined\">\r\n              <div class=\"label\">Literatur</div>\r\n              <div class=\"metadaten\">\r\n                {{ item.Lit1 }}\r\n              </div>\r\n            </li>\r\n            <li *ngIf=\"item.Bemerkung != undefined\">\r\n              <div class=\"label\">Bemerkung</div>\r\n              <div class=\"metadaten\">{{ item.Bemerkung }}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"kauf-daten-container\">\r\n          <ul>\r\n            <li>\r\n              <div class=\"label\">Kaufdatum / Händler:</div>\r\n              <div class=\"metadaten\">\r\n                {{ item.Kaufdatum }} {{ item.sla }} {{ item.Haendler }}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Kaufpreis:</div>\r\n              <div class=\"metadaten\" *ngIf=\"item.Kaufpreis != undefined\">\r\n                {{ item.Kaufpreis | numberFormatter }} {{ item.w }}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Versicherungssumme:</div>\r\n              <div class=\"metadaten\" *ngIf=\"item.VersSumme != undefined\">\r\n                {{ item.VersSumme | numberFormatter }} {{ item.w }}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div class=\"label\">Standort:</div>\r\n              <div class=\"metadaten\">{{ item.Standort }}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n","import { AppState } from './../../store/app.state';\r\nimport { ExcelStructure } from './../../../environments/environment';\r\nimport { SetPictures } from './../../store/app.action';\r\nimport { Store, Select } from '@ngxs/store';\r\nimport { ImageCompressService } from './../../service/image-compress.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  templateUrl: './pictures.component.html',\r\n  styleUrls: ['./pictures.component.scss'],\r\n})\r\nexport class PicturesComponent implements OnInit {\r\n  constructor(\r\n    private imageCompress: ImageCompressService,\r\n    private store: Store,\r\n    private router: Router\r\n  ) {}\r\n  imageFileData: Map<string, string> = new Map<string, string>();\r\n  validFiles: number = 0;\r\n  loader: boolean = false;\r\n  loadingPercent: number = 0;\r\n\r\n  @Select(AppState.excelData)\r\n  excelData$;\r\n  excelData: ExcelStructure[] = undefined;\r\n\r\n  ngOnInit(): void {\r\n    this.excelData$.subscribe((data: ExcelStructure[]) => {\r\n      this.excelData = data;\r\n      if (environment.requireExcel && this.excelData[0] == undefined) {\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadImage(e) {\r\n    this.loader = true;\r\n    this.countValidFiles(e);\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      if (e.target.files[i].type.includes('image/')) {\r\n        var that = this;\r\n        var reader = new FileReader();\r\n        reader.onload = (function (file) {\r\n          var fileName = file.name;\r\n          return function (event) {\r\n            const localUrl = event.target.result;\r\n            that.imageCompress\r\n              .compressFile(localUrl, fileName)\r\n              .subscribe((file) => {\r\n                that.imageFileData.set(that.getFileName(fileName), file);\r\n                that.loadingPercent = Math.ceil(\r\n                  (that.imageFileData.size * 100) / that.validFiles\r\n                );\r\n                if (that.imageFileData.size >= that.validFiles - 1) {\r\n                  that.store.dispatch(new SetPictures(that.imageFileData));\r\n                  that.router.navigate(['settings']);\r\n                }\r\n              });\r\n          };\r\n        })(e.target.files[i]);\r\n        reader.readAsDataURL(e.target.files[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  countValidFiles(e) {\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n      if (e.target.files[i].type.includes('image/')) {\r\n        this.validFiles++;\r\n      }\r\n    }\r\n  }\r\n\r\n  getFileName(file: string): string {\r\n    let names: string[] = file.split('.');\r\n    names.pop();\r\n    file = names.join('.');\r\n    return file;\r\n  }\r\n\r\n  nopictures() {\r\n    this.imageFileData.set('NOPICTURE', '');\r\n    this.store.dispatch(new SetPictures(this.imageFileData));\r\n    this.router.navigate(['settings']);\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div (click)=\"back()\" class=\"back-button-container\">&larr;</div>\r\n  <div class=\"file-container\">\r\n    <label class=\"file-upload\">\r\n      <input\r\n        type=\"file\"\r\n        class=\"form-control\"\r\n        (change)=\"loadImage($event)\"\r\n        placeholder=\"Upload image\"\r\n        accept=\"image/*\"\r\n        webkitdirectory\r\n        mozdirectory\r\n        msdirectory\r\n        odirectory\r\n        directory\r\n        multiple=\"multiple\"\r\n      />\r\n      Upload Pictures Folder\r\n    </label>\r\n    <div (click)=\"nopictures()\" class=\"no-pictures\">\r\n      Move on without pictures\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"loader\" class=\"loader\">\r\n  <div class=\"sk-folding-cube\">\r\n    <div class=\"sk-cube1 sk-cube\"></div>\r\n    <div class=\"sk-cube2 sk-cube\"></div>\r\n    <div class=\"sk-cube4 sk-cube\"></div>\r\n    <div class=\"sk-cube3 sk-cube\"></div>\r\n  </div>\r\n  loading & compressing images... <br />\r\n  {{ loadingPercent }}%\r\n</div>\r\n","import { ObjToXlsxService } from './../../service/obj-to-xlsx.service';\r\nimport { SetFilterdExcelData, SetFilters } from './../../store/app.action';\r\nimport {\r\n  ExcelStructure,\r\n  environment,\r\n} from './../../../environments/environment';\r\nimport { AppState } from './../../store/app.state';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Select, Store } from '@ngxs/store';\r\n\r\nexport type FilterType = 'include' | 'exclude';\r\n\r\nexport interface FilterObject {\r\n  type: FilterType;\r\n  column: string;\r\n  value: string;\r\n}\r\n\r\n@Component({\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private store: Store,\r\n    private xlsxService: ObjToXlsxService\r\n  ) {}\r\n\r\n  @Select(AppState.excelData)\r\n  excelData$;\r\n  excelData: ExcelStructure[] = undefined;\r\n\r\n  filterdExcelData: ExcelStructure[] = [];\r\n\r\n  @Select(AppState.pictures)\r\n  pictures$;\r\n  pictures: Map<string, string> = new Map<string, string>();\r\n\r\n  missingPictureReferences: number = 0;\r\n  missingPictureReferencesData: string[] = [];\r\n\r\n  missingPictures: number = 0;\r\n  missingPicturesData: ExcelStructure[] = [];\r\n\r\n  warningsOpen: boolean[] = [];\r\n\r\n  @Select(AppState.filters)\r\n  filters$;\r\n  filters: FilterObject[] = [];\r\n\r\n  typeOptions = [\r\n    { name: 'include', value: 'include' },\r\n    { name: 'exclude', value: 'exclude' },\r\n  ];\r\n  selectedType: FilterType = 'include';\r\n\r\n  columnOptions = [];\r\n  selectedColumn: string = '';\r\n\r\n  valueOptions: string[] = [];\r\n  selectedValue;\r\n  displaySelectValues: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.excelData$.subscribe((data: ExcelStructure[]) => {\r\n      this.excelData = data;\r\n      if (environment.requireExcel && this.excelData[0] == undefined) {\r\n        this.router.navigate(['']);\r\n      }\r\n      if (this.excelData[0] != undefined && this.pictures.size > 0) {\r\n        this.checkWarnings();\r\n        this.getColumnOptions();\r\n      }\r\n    });\r\n    this.pictures$.subscribe((data: Map<string, string>) => {\r\n      this.pictures = data;\r\n      if (this.excelData[0] != undefined && this.pictures.size > 0) {\r\n        this.checkWarnings();\r\n        this.getColumnOptions();\r\n      }\r\n    });\r\n    this.filters$.subscribe((data: FilterObject[]) => {\r\n      this.filters = data;\r\n    });\r\n  }\r\n\r\n  loader: boolean = false;\r\n\r\n  generatePdf() {\r\n    this.loader = true;\r\n    this.filters = this.sortFilters(this.filters);\r\n    this.applyFilters();\r\n    if (this.filterdExcelData.length > 0) {\r\n      this.router.navigate(['pdf']);\r\n    } else {\r\n      alert('There are no rows that match the filters');\r\n    }\r\n    this.loader = false;\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['pictures']);\r\n  }\r\n\r\n  applyFilters() {\r\n    if (this.filters.length > 0) {\r\n      for (let filter of this.filters) {\r\n        this.useFilter(filter);\r\n      }\r\n    } else {\r\n      this.filterdExcelData = this.excelData;\r\n    }\r\n    console.log(this.filterdExcelData);\r\n    this.store.dispatch(new SetFilterdExcelData(this.filterdExcelData));\r\n  }\r\n\r\n  useFilter(filter: FilterObject) {\r\n    if (filter.type == 'include') {\r\n      for (let i = 0; i < this.excelData.length; i++) {\r\n        if (this.excelData[i][filter.column] == filter.value) {\r\n          this.filterdExcelData.push(this.excelData[i]);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.filterdExcelData.length; i++) {\r\n        if (this.filterdExcelData[i][filter.column] == filter.value) {\r\n          this.filterdExcelData.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  sortFilters(filters: FilterObject[]): FilterObject[] {\r\n    let tempArr: FilterObject[] = [];\r\n    for (let f of filters) {\r\n      if (f.type == 'include') {\r\n        tempArr.unshift(f);\r\n      } else {\r\n        tempArr.push(f);\r\n      }\r\n    }\r\n    return tempArr;\r\n  }\r\n\r\n  deleteFilter(index: number) {\r\n    console.log(index);\r\n    this.filters.splice(index, 1);\r\n    this.store.dispatch(new SetFilters(this.filters));\r\n  }\r\n\r\n  getColumnOptions() {\r\n    this.columnOptions = [];\r\n    let options = Object.getOwnPropertyNames(this.excelData[0]);\r\n    options.shift();\r\n    for (let i = 0; i < options.length; i++) {\r\n      this.columnOptions.push({\r\n        name: options[i],\r\n        value: options[i],\r\n      });\r\n    }\r\n  }\r\n\r\n  getValueOptions() {\r\n    this.valueOptions = [];\r\n    for (let row of this.excelData) {\r\n      if (!this.valueOptions.includes(row[this.selectedColumn])) {\r\n        this.valueOptions.push(row[this.selectedColumn]);\r\n      }\r\n    }\r\n    this.displaySelectValues = true;\r\n  }\r\n\r\n  checkWarnings() {\r\n    this.checkPicRef();\r\n    this.checkPics();\r\n  }\r\n\r\n  checkPics() {\r\n    for (let row of this.excelData) {\r\n      if (row.DateinameAbb != 'nv') {\r\n        if (!this.pictures.has(row.DateinameAbb)) {\r\n          this.missingPictures++;\r\n          this.missingPicturesData.push(row);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPicRef() {\r\n    for (let [key, value] of this.pictures) {\r\n      if (\r\n        this.excelData.find((data) => data.DateinameAbb == key) == undefined\r\n      ) {\r\n        if (key != 'NOPICTURE') {\r\n          this.missingPictureReferences++;\r\n          this.missingPictureReferencesData.push(key);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setFilter() {\r\n    if (this.selectedColumn != '') {\r\n      let filter: FilterObject = {\r\n        type: this.selectedType,\r\n        column: this.selectedColumn,\r\n        value: this.selectedValue,\r\n      };\r\n      this.filters.push(filter);\r\n      this.selectedValue = '';\r\n      this.store.dispatch(new SetFilters(this.filters));\r\n    } else {\r\n      alert('Please select a column');\r\n    }\r\n  }\r\n\r\n  downloadMissingRefWarnings() {\r\n    let tempArr: object[] = [];\r\n    for (let pic of this.missingPictureReferencesData) {\r\n      tempArr.push({\r\n        UnreferencedPicture: pic,\r\n      });\r\n    }\r\n    this.xlsxService.downloadXlsx(tempArr, 'missingReferences');\r\n  }\r\n\r\n  downloadMissingPicWarnings() {\r\n    this.xlsxService.downloadXlsx(this.missingPicturesData, 'missingPictures');\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div (click)=\"back()\" class=\"back-button-container\">&larr;</div>\r\n\r\n  <div class=\"warnings-container\">\r\n    Warnings:\r\n    <div class=\"warning\" (click)=\"warningsOpen[0] = !warningsOpen[0]\">\r\n      There are {{ missingPictureReferences }} pictures that aren't referenced\r\n      in the excel database\r\n      <div (click)=\"downloadMissingRefWarnings()\" class=\"download\">\r\n        &#11123;\r\n      </div>\r\n      <div *ngIf=\"!warningsOpen[0]\" class=\"arrow\">&#9660;</div>\r\n      <div *ngIf=\"warningsOpen[0]\" class=\"arrow\">&#9650;</div>\r\n    </div>\r\n    <div *ngIf=\"warningsOpen[0]\" class=\"detailed-warning\">\r\n      <ul>\r\n        <li>\r\n          <div>Picture Name</div>\r\n        </li>\r\n        <li *ngFor=\"let item of missingPictureReferencesData\">\r\n          <div class=\"file-name\">{{ item }}</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"warning\" (click)=\"warningsOpen[1] = !warningsOpen[1]\">\r\n      There are {{ missingPictures }} pictures missing\r\n      <div (click)=\"downloadMissingPicWarnings()\" class=\"download\">\r\n        &#11123;\r\n      </div>\r\n      <div *ngIf=\"!warningsOpen[1]\" class=\"arrow\">&#9660;</div>\r\n      <div *ngIf=\"warningsOpen[1]\" class=\"arrow\">&#9650;</div>\r\n    </div>\r\n    <div *ngIf=\"warningsOpen[1]\" class=\"detailed-warning\">\r\n      <ul>\r\n        <li>\r\n          <div>Titel:</div>\r\n          <div>Name:</div>\r\n          <div>File Name:</div>\r\n        </li>\r\n        <li *ngFor=\"let item of missingPicturesData\">\r\n          <div class=\"titel\">{{ item.Titel }}</div>\r\n          <div class=\"name>\">{{ item.Name }}</div>\r\n          <div class=\"file-name\">{{ item.DateinameAbb }}</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"filter-container\">\r\n    Filter:\r\n    <ul>\r\n      <li *ngFor=\"let item of filters; let i = index\" class=\"filter\">\r\n        <div class=\"current-filter-container\">\r\n          Filter: <mark>{{ item.type }}</mark> all rows with\r\n          <mark>{{ item.column }}</mark> set to\r\n          <mark>{{ item.value }}</mark>\r\n\r\n          <div (click)=\"deleteFilter(i)\" class=\"delete-filter\">&times;</div>\r\n        </div>\r\n      </li>\r\n      <li class=\"add-filter\">\r\n        <div class=\"add-filter-container\">\r\n          New Filter:\r\n          <select [(ngModel)]=\"selectedType\" name=\"selectType\">\r\n            <option *ngFor=\"let o of typeOptions\">\r\n              {{ o.name }}\r\n            </option>\r\n          </select>\r\n          <div>all rows with</div>\r\n          <select\r\n            (change)=\"getValueOptions()\"\r\n            [(ngModel)]=\"selectedColumn\"\r\n            name=\"selectColumn\"\r\n          >\r\n            <option *ngFor=\"let o of columnOptions\">\r\n              {{ o.name }}\r\n            </option>\r\n          </select>\r\n          <div *ngIf=\"displaySelectValues\">set to</div>\r\n          <select\r\n            *ngIf=\"displaySelectValues\"\r\n            [(ngModel)]=\"selectedValue\"\r\n            name=\"selectValue\"\r\n          >\r\n            <option *ngFor=\"let o of valueOptions\">\r\n              {{ o }}\r\n            </option>\r\n          </select>\r\n          <div (click)=\"setFilter()\" class=\"set-filter\">\r\n            Set Filter &#10132;\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"file-container\">\r\n    <button (click)=\"generatePdf()\">Generate Pdf</button>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"loader\" class=\"loader\">\r\n  <div class=\"sk-folding-cube\">\r\n    <div class=\"sk-cube1 sk-cube\"></div>\r\n    <div class=\"sk-cube2 sk-cube\"></div>\r\n    <div class=\"sk-cube4 sk-cube\"></div>\r\n    <div class=\"sk-cube3 sk-cube\"></div>\r\n  </div>\r\n  loading & compressing images...\r\n</div>\r\n","import { FilterObject } from './../sites/settings/settings.component';\r\nexport class SetExcelData {\r\n  static type = 'SetExcelData';\r\n  constructor(public excelData: object[]) {}\r\n}\r\n\r\nexport class SetFilterdExcelData {\r\n  static type = 'SetFilterdExcelData';\r\n  constructor(public filterdExcelData: object[]) {}\r\n}\r\n\r\nexport class SetPictures {\r\n  static type = 'SetPictures';\r\n  constructor(public pictures: Map<string, string>) {}\r\n}\r\n\r\nexport class SetFilters {\r\n  static type = 'SetFilters';\r\n  constructor(public filters: FilterObject[]) {}\r\n}\r\n","import { FilterObject } from './../sites/settings/settings.component';\r\n//////Use\r\n/*\r\n  @Select(AppState.userId)\r\n  userId$;\r\n\r\n  ngOninit:\r\n    this.userId$.subscribe((userId: string) => {\r\n      this.userId = userId;\r\n    });\r\n\r\n  Set:\r\n  constructor: private store: Store\r\n\r\n  this.store.dispatch(new SetUserId(x));\r\n*/\r\nimport { SetPictures, SetFilterdExcelData, SetFilters } from './app.action';\r\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\r\nimport { SetExcelData } from './app.action';\r\n\r\nexport interface AppStateModel {\r\n  excelData: object[];\r\n  filterdExcelData: object[];\r\n  pictures: Map<string, string>;\r\n  filters: FilterObject[];\r\n}\r\n\r\n@State<AppStateModel>({\r\n  name: 'appState',\r\n  defaults: {\r\n    excelData: [],\r\n    filterdExcelData: [],\r\n    filters: [],\r\n    pictures: new Map<string, string>(),\r\n  },\r\n})\r\nexport class AppState {\r\n  @Selector()\r\n  static excelData(state: AppStateModel) {\r\n    return state.excelData;\r\n  }\r\n\r\n  @Action(SetExcelData)\r\n  SetExcelData(context: StateContext<AppStateModel>, action: SetExcelData) {\r\n    context.patchState({\r\n      excelData: action.excelData,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static filterdExcelData(state: AppStateModel) {\r\n    return state.filterdExcelData;\r\n  }\r\n\r\n  @Action(SetFilterdExcelData)\r\n  SetFilterdExcelData(\r\n    context: StateContext<AppStateModel>,\r\n    action: SetFilterdExcelData\r\n  ) {\r\n    context.patchState({\r\n      filterdExcelData: action.filterdExcelData,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static pictures(state: AppStateModel) {\r\n    return state.pictures;\r\n  }\r\n\r\n  @Action(SetPictures)\r\n  setPictures(context: StateContext<AppStateModel>, action: SetPictures) {\r\n    context.patchState({\r\n      pictures: action.pictures,\r\n    });\r\n  }\r\n\r\n  @Selector()\r\n  static filters(state: AppStateModel) {\r\n    return state.filters;\r\n  }\r\n\r\n  @Action(SetFilters)\r\n  SetFilters(context: StateContext<AppStateModel>, action: SetFilters) {\r\n    context.patchState({\r\n      filters: action.filters,\r\n    });\r\n  }\r\n}\r\n","import { Store } from '@ngxs/store';\r\n// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { StringMap } from '@angular/compiler/src/compiler_facade_interface';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  requireExcel: false,\r\n  excludedEndRows: 2,\r\n};\r\n\r\nexport interface ExcelStructure {\r\n  /* Kunstler: string;\r\n  Bildname: string;\r\n  Jahr: number;\r\n  Preis: number;\r\n  */\r\n  InvNr: string;\r\n  Firma: string;\r\n  Kategorie: string;\r\n  Katspez: string;\r\n  DateinameAbb: string;\r\n  Zuname: string;\r\n  Name: string;\r\n  Lebensdaten: string;\r\n  Titel: string;\r\n  Datierung: string;\r\n  Technik: string;\r\n  Abmessungen: string;\r\n  Bezeichnung: string;\r\n  Expertiese: string;\r\n  Prov: string;\r\n  wProv: string;\r\n  Ausst: string;\r\n  ewAusst: string;\r\n  Lit1: string;\r\n  Lit2: string;\r\n  Bemerkung: string;\r\n  Kaufdatum: string;\r\n  sla: string;\r\n  Haendler: string;\r\n  Kaufpreis: string;\r\n  w: string;\r\n  VersSumme: string;\r\n  Versicherung: string;\r\n  lagernd: string;\r\n  Leihgabe: string;\r\n  Standort: string;\r\n}\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}